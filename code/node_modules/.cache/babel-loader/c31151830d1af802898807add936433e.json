{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/Post2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { db } from './firebase';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport firebase from 'firebase';\nimport { UserContext, useContext } from 'react';\n\nfunction Post2({\n  postId,\n  uid,\n  user,\n  username,\n  caption,\n  keyword,\n  imageUrl\n}) {\n  _s();\n\n  // const currentUser = useContext(UserContext);\n  const [comments, setComments] = useState([]); //keep track of the comments\n\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) //if a post id was passed true\n      {\n        unsubscribe = db.collection(\"posts\") //access the post collection\n        .doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n          // get a snapshot listener for that comment\n          setComments(snapshot.docs.map(doc => doc.data()));\n        });\n      }\n  }\n  /*       db.collection(\"posts\")\n        .where(\"username\", \"=\", currentUser.username)\n      .get()\n      .then(function(querySnapshot) {\n          querySnapshot.forEach(function(doc) {\n              // doc.data() is never undefined for query doc snapshots\n              console.log(doc.id, \" => \", doc.data());\n          });\n      })\n      .catch(function(error) {\n          console.log(\"Error getting documents: \", error);\n      }); */\n  // return () => {\n  //   unsubscribe();\n  // };\n  // },\n  // [postId]\n  ); //function that submits comment into database for a specific post\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      //get the user who signed in from app.js\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(''); //clears the box\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"post__avatar\",\n        alt: username\n        /*display the first letter if no picture*/\n        ,\n        src: \"/static/images/avatar/1.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"post__image\",\n      src: imageUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"post__text\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this), \" \", caption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post__button\",\n        type: \"submit\",\n        children: \" Decline \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"post__button\",\n        type: \"submit\",\n        children: \" Approve \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Post2, \"vDMNQUtDpjPqquTzbqtVZcuIh7s=\");\n\n_c = Post2;\nexport default Post2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post2\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/Post2.js"],"names":["React","useState","useEffect","db","Avatar","firebase","UserContext","useContext","Post2","postId","uid","user","username","caption","keyword","imageUrl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,WAAT,EAAuBC,UAAvB,QAAwC,OAAxC;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,MAAD;AAASC,EAAAA,GAAT;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,OAAvC;AAAgDC,EAAAA;AAAhD,CAAf,EAA0E;AAAA;;AAEzE;AACC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC,CAHwE,CAG1B;;AAC9C,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIkB,WAAJ;;AACA,QAAIX,MAAJ,EAAY;AACZ;AACEW,QAAAA,WAAW,GAAGjB,EAAE,CACfkB,UADa,CACF,OADE,EACO;AADP,SAEbC,GAFa,CAETb,MAFS,EAGbY,UAHa,CAGF,UAHE,EAIbE,OAJa,CAIL,WAJK,EAIQ,MAJR,EAKbC,UALa,CAKDC,QAAD,IAAc;AAAE;AAC5BR,UAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBL,GAAD,IAASA,GAAG,CAACM,IAAJ,EAA3B,CAAD,CAAX;AACC,SAPa,CAAd;AAOI;AAAC;AAGX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AAhCS,GAAT,CALwE,CAwCxE;;AACA,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA5B,IAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2Bb,MAA3B,EAAmCY,UAAnC,CAA8C,UAA9C,EAA0DW,GAA1D,CAA8D;AAC5DC,MAAAA,IAAI,EAAEf,OADsD;AAE5DN,MAAAA,QAAQ,EAAED,IAAI,CAACuB,WAF6C;AAE/B;AAC7BC,MAAAA,SAAS,EAAE9B,QAAQ,CAAC+B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHiD,KAA9D;AAKAnB,IAAAA,UAAU,CAAC,EAAD,CAAV,CAR6B,CAQb;AACjB,GATD;;AAYE,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAGE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACA,QAAC,MAAD;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,GAAG,EAAEP;AAAU;AAFnB;AAGI,QAAA,GAAG,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,cADA,eAMA;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cANA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAaE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEG,QAAlC;AAA4C,MAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BAA2B;AAAA,kBAASH;AAAT;AAAA;AAAA;AAAA;AAAA,cAA3B,OAAwDC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE;AAAA,8BACA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBH;;GA7EQL,K;;KAAAA,K;AA+ET,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { db } from './firebase';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport firebase from 'firebase';\nimport { UserContext , useContext} from 'react';\n\nfunction Post2({postId, uid, user, username, caption, keyword, imageUrl}) {\n\n // const currentUser = useContext(UserContext);\n  const [comments, setComments] = useState([]); //keep track of the comments\n  const [comment, setComment] = useState('');\n  useEffect(()=>{\n    let unsubscribe;\n    if (postId) //if a post id was passed true\n    {\n      unsubscribe = db\n      .collection(\"posts\") //access the post collection\n      .doc(postId)\n      .collection(\"comments\")\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => { // get a snapshot listener for that comment\n\t\t    setComments(snapshot.docs.map((doc) => doc.data())); \n      });}}\n\n\n/*       db.collection(\"posts\")\n      .where(\"username\", \"=\", currentUser.username)\n    .get()\n    .then(function(querySnapshot) {\n        querySnapshot.forEach(function(doc) {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n        });\n    })\n    .catch(function(error) {\n        console.log(\"Error getting documents: \", error);\n    }); */\n  \n\n  // return () => {\n  //   unsubscribe();\n  // };\n  // },\n  // [postId]\n  );\n\n  //function that submits comment into database for a specific post\n  const postComment = (event) => {\n    event.preventDefault();\n\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,  //get the user who signed in from app.js\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(''); //clears the box\n  }\n\n\n    return (\n      <div className=\"post\">\n\n        {/*header -> avatar + username */}\n        <div className=\"post__header\">\n        <Avatar\n            className=\"post__avatar\"\n            alt={username} /*display the first letter if no picture*/\n            src=\"/static/images/avatar/1.jpg\"\n            />\n        <h3>{username}</h3>\n        </div>\n\n        {/*image*/}\n        <img className=\"post__image\" src={imageUrl} alt=\"\"></img>\n       \n        {/* username + caption */}\n        <h4 className=\"post__text\"><strong>{username}</strong> {caption}</h4>\n        <center>\n        <button className=\"post__button\" type=\"submit\"> Decline </button>\n        <button className=\"post__button\" type=\"submit\"> Approve </button>\n        </center>\n      </div>\n    )\n}\n\nexport default Post2\n"]},"metadata":{},"sourceType":"module"}