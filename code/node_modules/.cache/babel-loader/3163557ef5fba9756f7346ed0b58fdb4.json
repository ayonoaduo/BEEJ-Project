{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Input } from '@material-ui/core';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport { storage } from './firebase';\nimport './ImageUpload.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction AdminPage() {\n  _s();\n\n  /*states...how you set variables in react*/\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openAdmin, setOpenAdmin] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n  //IMAGE UPLOAD STATES\n\n  const [openP, setOpenP] = useState(false);\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null); //state for the progress bar\n\n  const [progress, setProgress] = useState(0);\n  const [openProgress, setOpenProgress] = useState(false); //progress bar state\n\n  const [keyword, setKeyword] = React.useState('');\n  const [openDropDown, setOpenDropDown] = React.useState(false);\n\n  const handleChangeDropDown = event => {\n    setKeyword(event.target.value);\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenDropDown(false);\n  };\n\n  const handleOpenDropDown = () => {\n    setOpenDropDown(true);\n  }; //imageupload functions\n\n\n  const handleChange = e => {\n    //handleChange function fires off an event\n    if (e.target.files[0]) {\n      //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault(); //avoid refresh when upload button is clicked\n    //access the storage in firebase, get a references to the folder images/ and store image there\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\",\n    /*provide snapshot of the image uploading progress via an equation*/\n    snapshot => {\n      //progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error function ..\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL() //GET DOWNLOAD LINK TO THE IMAGE\n      .then(url => {\n        //post image inside db\n        db.collection(\"posts\").add({\n          //get server timestamp so images are sorted by time posted\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: user.displayName,\n          keyword: keyword\n        });\n        setProgress(0); //reset progress\n\n        setCaption(\"\");\n        setImage(null);\n        setKeyword(\"\");\n      });\n    });\n    setOpenP(false); //close modal after upload\n\n    setOpenProgress(true); //open progress modal\n\n    setOpenProgress(false); //never mind, dont show progress bar modal\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n\n  const myFunction = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n\n    var passcode = document.getElementById(\"pass\").value;\n    passcode == 70321 ? window.location = \"/New\" : alert(\"Incorrect passcode\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app__headerImage\",\n        src: logo,\n        alt: \"\",\n        width: \"60px\",\n        height: \"60px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //if the user exists, show a Logout button\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => auth.signOut(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      //else, show a sign up button\n      _jsxDEV(\"div\", {\n        className: \"app__loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSignIn(true),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_postsRight\",\n        children:\n        /*loop through posts in state*/\n        posts.map(({\n          id,\n          post\n        }) =>\n        /*#__PURE__*/\n        //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n        _jsxDEV(Post, {\n          postId: id,\n          user: user,\n          username: post.username,\n          caption: post.caption,\n          imageUrl: post.imageUrl,\n          keyword: post.keyword\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n    /*#__PURE__*/\n    //access only when user is signed in\n    _jsxDEV(\"div\", {\n      className: \"app__bottom\",\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation // showLabels\n      // className={classes.root}\n      , {\n        children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 46\n          }, this),\n          component: Link,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Post\",\n          icon: /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 46\n          }, this),\n          component: Link,\n          onClick: () => setOpenP(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Nav\",\n          icon: /*#__PURE__*/_jsxDEV(NotificationsNoneOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 45\n          }, this),\n          component: Link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Profile\",\n          icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 49\n          }, this),\n          component: Link,\n          to: \"/Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this) //hide navigation bar when user is not signed in\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminPage, \"J3FrSXqG9Q7Jz+6uleIomal1O64=\", false, function () {\n  return [useStyles];\n});\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/AdminPage.js"],"names":["React","useState","useEffect","logo","Post","db","auth","makeStyles","Modal","Input","AccountCircleOutlinedIcon","EmailOutlinedIcon","LockOutlinedIcon","BottomNavigation","HomeOutlinedIcon","AddBoxOutlinedIcon","NotificationsNoneOutlinedIcon","BottomNavigationAction","Link","firebase","storage","InputLabel","MenuItem","FormControl","Select","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","AdminPage","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","openAdmin","setOpenAdmin","username","setUsername","password","setPassword","email","setEmail","user","setUser","openP","setOpenP","caption","setCaption","image","setImage","progress","setProgress","openProgress","setOpenProgress","keyword","setKeyword","openDropDown","setOpenDropDown","handleChangeDropDown","event","target","value","handleCloseDropDown","handleOpenDropDown","handleChange","e","files","handleUpload","preventDefault","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","displayName","unsubscribe","onAuthStateChanged","authUser","updateProfile","orderBy","onSnapshot","docs","map","doc","id","post","data","myFunction","passcode","document","getElementById","window","location","signOut"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport {db, auth} from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport {Input} from '@material-ui/core';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport {Link} from 'react-router-dom';\nimport firebase from \"firebase\";\nimport {storage} from './firebase';\nimport './ImageUpload.css';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction AdminPage() {\n   /*states...how you set variables in react*/\n   const classes = useStyles();\n   // getModalStyle is not a pure function, we roll the style only on the first render\n   const [modalStyle] = useState(getModalStyle);\n\n   const [posts, setPosts] = useState([]);\n   const [open,setOpen] = useState(false);\n   const [openSignIn, setOpenSignIn] = useState(false);\n   const [openAdmin, setOpenAdmin] = useState(false);\n   const [username,setUsername] = useState('');\n   const [password,setPassword] = useState('');\n   const [email,setEmail] = useState('');\n   const [user,setUser] = useState(null); //state to keep track of the user\n\n\n   //IMAGE UPLOAD STATES\n   const [openP,setOpenP] = useState(false);\n   const [caption, setCaption] = useState('');\n   const [image, setImage] = useState(null); //state for the progress bar\n\n   const [progress, setProgress] = useState(0);\n   const [openProgress,setOpenProgress] = useState(false);  //progress bar state\n\n   const [keyword, setKeyword] = React.useState('');\n   const [openDropDown, setOpenDropDown] = React.useState(false);\n\n   const handleChangeDropDown = (event) => {\n      setKeyword(event.target.value);\n   };\n\n   const handleCloseDropDown = () => {\n      setOpenDropDown(false);\n   };\n\n  const handleOpenDropDown = () => {\n      setOpenDropDown(true);\n   };\n\n\n   //imageupload functions\n   const handleChange =  (e) => {//handleChange function fires off an event\n   if (e.target.files[0]) { //get the first file you selected\n         setImage(e.target.files[0]); //set the image in state to that file\n   }\n   };\n\n\n\n\n  const handleUpload = (event) => {\n  event.preventDefault(); //avoid refresh when upload button is clicked\n\n  //access the storage in firebase, get a references to the folder images/ and store image there\n\n   const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    \n    uploadTask.on(\n      \"state_changed\",\n      /*provide snapshot of the image uploading progress via an equation*/\n       (snapshot) => {\n          //progress function ...\n          const progress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n      },\n      (error) => {\n          //error function ..\n          console.log(error);\n          alert(error.message);\n      }, \n      () => {\n          // complete function ...\n          storage\n              .ref(\"images\")\n              .child(image.name)\n              .getDownloadURL()   //GET DOWNLOAD LINK TO THE IMAGE\n              .then(url => {\n                  //post image inside db\n                  db.collection(\"posts\").add({\n                      //get server timestamp so images are sorted by time posted\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                      caption: caption,\n                      imageUrl: url,\n                      username: user.displayName,\n                      keyword: keyword\n                  });\n\n                  setProgress(0); //reset progress\n                  setCaption(\"\");\n                  setImage(null);\n                  setKeyword(\"\");\n              });\n      }\n  );\n\n \n setOpenP(false); //close modal after upload\n setOpenProgress(true); //open progress modal\n setOpenProgress(false); //never mind, dont show progress bar modal\n\n\n};\n\n\n\n\n\nuseEffect(() => {\n  \n    const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);  //check the console if someone is there or not\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {\n          //dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set their display name in firebase\n        });\n        }\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe ();\n    }\n},\n [user, username]);\n\n//useEffect runs a piece of code based on a specific condition\n useEffect(() => {\n  //this is where the code runs\n  //snapshot is a powerful listener that will run the code when a post is made\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //everytime a new post is added, this code fires...\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id, //the post ids\n      post: doc.data()\n    })));\n  })\n}, []); //[] symbol means run the code once\n\n\n\n   const myFunction = (event)=>{\n      event.preventDefault(); //avoid refresh when sign up button is clicked\n\n      var passcode = document.getElementById(\"pass\").value;\n      (passcode == 70321) ? window.location = \"/New\" : alert(\"Incorrect passcode\")\n   }\n\n\n  return (\n    <div className=\"app\">\n      {/*using BEM naming convetion*/}\n\n\n      \n\n\n\n\n      <div className=\"app__header\">\n        \n       \n\n        <img\n        \n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"60px\"\n          height=\"60px\"\n          />\n\n\n \n\n\n{/**********************************************NEWWWWWWWWW***********************************************************************/}\n\n\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <div>\n         <button onClick={() => auth.signOut()}>Logout</button>\n        </div>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n            \n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n        </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n\n\n\n\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n         <Post key={id} postId={id} user= {user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} keyword={post.keyword}></Post>\n        ))\n        }\n      </div>\n      </div>\n        \n\n\n\n\n\n\n\n\n\n\n\n\n{user?.displayName ?(//access only when user is signed in\n\n \n      <div className=\"app__bottom\">\n      <BottomNavigation\n       // showLabels\n       // className={classes.root}\n        \n      >\n  <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/\" />\n  <BottomNavigationAction label=\"Post\" icon={<AddBoxOutlinedIcon />} component={Link} onClick={() => setOpenP(true)}/>\n  <BottomNavigationAction label=\"Nav\" icon={<NotificationsNoneOutlinedIcon />} component={Link}/>\n  <BottomNavigationAction label=\"Profile\" icon={<AccountCircleOutlinedIcon />} component={Link} to=\"/Profile\"/>\n\n</BottomNavigation>\n</div>\n     ):\n     (\n        <h7></h7> //hide navigation bar when user is not signed in\n    )}\n     \n\n    </div>\n  );\n\n\n\n  \n}\n\nexport default AdminPage;"]},"metadata":{},"sourceType":"module"}