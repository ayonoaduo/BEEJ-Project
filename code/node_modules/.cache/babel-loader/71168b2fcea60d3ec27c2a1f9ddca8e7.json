{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/AdminPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport logo from './beej.png';\nimport Post2 from './Post2';\nimport { db, auth } from './firebase';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport { Link } from 'react-router-dom';\nimport './ImageUpload.css';\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nfunction AdminPage() {\n  _s();\n\n  /*states...how you set variables in react*/\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [username] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false); //imageupload functions\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app__headerImage\",\n        src: logo,\n        alt: \"\",\n        width: \"60px\",\n        height: \"60px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //if the user exists, show a Logout button\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => auth.signOut(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      //else, show a sign up button\n      _jsxDEV(\"div\", {\n        className: \"app__loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSignIn(true),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_postsRight\",\n        children:\n        /*loop through posts in state*/\n        posts.map(({\n          id,\n          post\n        }) =>\n        /*#__PURE__*/\n        //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n        _jsxDEV(Post2, {\n          postId: id,\n          user: user,\n          username: post.username,\n          caption: post.caption,\n          imageUrl: post.imageUrl,\n          keyword: post.keyword\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n    /*#__PURE__*/\n    //access only when user is signed in\n    _jsxDEV(\"div\", {\n      className: \"app__bottom\",\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n        children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 56\n          }, this),\n          component: Link,\n          to: \"/AdminPage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"New Reports\",\n          icon: /*#__PURE__*/_jsxDEV(DescriptionOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 63\n          }, this),\n          component: Link,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Profile\",\n          icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 59\n          }, this),\n          component: Link,\n          to: \"/UserProfile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 10\n    }, this) //hide navigation bar when user is not signed in\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminPage, \"vLLMkZ1XhkT0C6h8MrkrvvFeuNQ=\");\n\n_c = AdminPage;\nexport default AdminPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/AdminPage.js"],"names":["React","useState","useEffect","logo","Post2","db","auth","AccountCircleOutlinedIcon","BottomNavigation","HomeOutlinedIcon","BottomNavigationAction","DescriptionOutlinedIcon","Link","getModalStyle","top","left","transform","AdminPage","posts","setPosts","username","user","setUser","open","setOpen","openSignIn","setOpenSignIn","unsubscribe","onAuthStateChanged","authUser","console","log","displayName","updateProfile","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","signOut","caption","imageUrl","keyword"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport logo from './beej.png';\nimport Post2 from './Post2';\nimport {db, auth} from './firebase';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\n\nimport {Link} from 'react-router-dom';\nimport './ImageUpload.css';\n\n\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\n\nfunction AdminPage() {\n   /*states...how you set variables in react*/\n   // getModalStyle is not a pure function, we roll the style only on the first render\n   const [] = useState(getModalStyle);\n\n   const [posts, setPosts] = useState([]);\n   const [username] = useState('');\n   const [user,setUser] = useState(null); //state to keep track of the user\n\n   const [open,setOpen] = useState(false);\n   const [openSignIn, setOpenSignIn] = useState(false);\n   //imageupload functions\n\n\n   useEffect(() => {\n   \n      const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n         if (authUser) {\n         //user has logged in...\n         console.log(authUser);  //check the console if someone is there or not\n         setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n         if (authUser.displayName) {\n            //dont update username if they dont have a display name\n         } else {\n            // if we just created someone...\n            return authUser.updateProfile({\n               displayName: username, //set their display name in firebase\n         });\n         }\n\n         } else {\n         // user has logged out...\n         setUser(null);\n         }\n      })\n\n      return () => {\n         //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n         unsubscribe ();\n      }\n   },[user, username]);\n\n   //useEffect runs a piece of code based on a specific condition\n   useEffect(() => {\n      //this is where the code runs\n      //snapshot is a powerful listener that will run the code when a post is made\n      db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n         //everytime a new post is added, this code fires...\n         setPosts(snapshot.docs.map(doc => ({\n            id: doc.id, //the post ids\n            post: doc.data()\n         })));\n      })\n   }, []); //[] symbol means run the code once\n\n  return (\n    <div className=\"app\">\n      {/*using BEM naming convetion*/}\n\n      <div className=\"app__header\">\n\n        <img\n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"60px\"\n          height=\"60px\"\n          />\n\n{/**********************************************NEWWWWWWWWW***********************************************************************/}\n\n\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <div>\n         <button onClick={() => auth.signOut()}>Logout</button>\n        </div>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n            \n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n        </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n\n\n\n\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n         <Post2 key={id} postId={id} user= {user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} keyword={post.keyword}></Post2>\n        ))\n        }\n      </div>\n      </div>\n        \n\n\n   {user?.displayName ?(//access only when user is signed in\n\n      <div className=\"app__bottom\">\n         <BottomNavigation>\n            <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/AdminPage\" />\n            <BottomNavigationAction label=\"New Reports\" icon={<DescriptionOutlinedIcon />} component={Link} to=\"/\"/>\n            <BottomNavigationAction label=\"Profile\" icon={<AccountCircleOutlinedIcon />} component={Link} to=\"/UserProfile\"/>\n         </BottomNavigation>\n      </div>\n      ):\n      (\n         <h7></h7> //hide navigation bar when user is not signed in\n      )}\n      \n\n      </div>\n  );\n\n\n\n  \n}\n\nexport default AdminPage;"]},"metadata":{},"sourceType":"module"}