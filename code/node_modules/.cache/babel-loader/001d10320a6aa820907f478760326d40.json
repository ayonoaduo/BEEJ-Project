{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport { db, auth, storage } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal'; //import {Button} from '@material-ui/core';\n\nimport { Input } from '@material-ui/core'; //import VerifyEmail from './VerifyEmail';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport RecoverAccount from './RecoverAccount';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport './ImageUpload.css';\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Home() {\n  _s();\n\n  /*states...how you set variables in react*/\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [openImg, setOpenImg] = useState(false);\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null); //state for the progress bar\n\n  const [progress, setProgress] = useState(0);\n  const [posts, setPosts] = useState([]);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n\n  const handleChange = e => {\n    //handleChange function fires off an event\n    if (e.target.files[0]) {\n      //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n    }\n  };\n\n  const handleUpload = () => {\n    //access the storage in firebase, get a references to the folder images/ and store image there\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\",\n    /*provide snapshot of the image uploading progress via an equation*/\n    snapshot => {\n      //progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error function ..\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL() //GET DOWNLOAD LINK TO THE IMAGE\n      .then(url => {\n        //post image inside db\n        db.collection(\"posts\").add({\n          //get server timestamp so images are sorted by time posted\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: username\n        });\n        setProgress(0); //reset progress\n\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n  //sign up function. Fired up by the button\n\n  const signUp = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n    //verify email\n\n    auth.onAuthStateChanged(function (firebaseUser) {\n      if (firebaseUser) {\n        firebaseUser.sendEmailVerification().then(function () {// Email sent.\n          //alert(\"Your email verification code has been sent\")\n        }, function (error) {\n          // An error happened.\n          alert(error.message);\n        });\n      } else {}\n    });\n    auth.createUserWithEmailAndPassword(email, password) //create user\n    .then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpen(false); //close modal after signing up\n  }; //sign in function. Fired up by the button\n\n\n  const signIn = event => {\n    event.preventDefault(); //avoid refresh when sign in button is clicked\n\n    auth.signInWithEmailAndPassword(email, password) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpenSignIn(false); //close modal after signing in\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(user === null || user === void 0 ? void 0 : user.displayName) ?\n    /*#__PURE__*/\n    //access only when user is signed in\n    _jsxDEV(ImageUpload, {\n      username: user.displayName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {\n      children: \"Sorry you need to login to upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign up Modal\n    , {\n      open: open //state to keep track if its open\n      ,\n      onClose: () => setOpen(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signUp,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign Out and Login Modal\n    , {\n      open: openSignIn //state to keep track if its open\n      ,\n      onClose: () => setOpenSignIn(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign up Modal\n    , {\n      open: open //state to keep track if its open\n      ,\n      onClose: () => setOpenImg(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageupload\",\n            children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n              className: \"imageupload__progress\",\n              value: progress,\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter a caption...\",\n              onChange: event => setCaption(event.target.value),\n              value: caption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpload,\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app__headerImage\",\n        src: logo,\n        alt: \"\",\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //if the user exists, show a Logout button\n      _jsxDEV(\"button\", {\n        onClick: () => auth.signOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      //else, show a sign up button\n      _jsxDEV(\"div\", {\n        className: \"app__loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSignIn(true),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_postsRight\",\n        children:\n        /*loop through posts in state*/\n        posts.map(({\n          id,\n          post\n        }) =>\n        /*#__PURE__*/\n        //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n        _jsxDEV(Post, {\n          postId: id,\n          user: user,\n          username: post.username,\n          caption: post.caption,\n          imageUrl: post.imageUrl\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__bottom\",\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n        children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 48\n          }, this),\n          component: Link,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"AddBox\",\n          icon: /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 50\n          }, this),\n          component: Link,\n          to: \"/RecoverAccount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Notifications\",\n          icon: /*#__PURE__*/_jsxDEV(NotificationsNoneOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 57\n          }, this),\n          onClick: () => setOpenImg(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Account\",\n          icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"Bouff+YlGY5E7DBd0vbM83i0tSk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/Home.js"],"names":["React","useState","useEffect","logo","Post","db","auth","storage","makeStyles","Modal","Input","AccountCircleOutlinedIcon","EmailOutlinedIcon","LockOutlinedIcon","RecoverAccount","BottomNavigation","HomeOutlinedIcon","AddBoxOutlinedIcon","NotificationsNoneOutlinedIcon","BottomNavigationAction","Link","firebase","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Home","classes","modalStyle","open","setOpen","openImg","setOpenImg","caption","setCaption","image","setImage","progress","setProgress","posts","setPosts","openSignIn","setOpenSignIn","username","setUsername","password","setPassword","email","setEmail","user","setUser","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","unsubscribe","onAuthStateChanged","authUser","displayName","updateProfile","orderBy","onSnapshot","docs","map","doc","id","post","data","signUp","event","preventDefault","firebaseUser","sendEmailVerification","createUserWithEmailAndPassword","catch","signIn","signInWithEmailAndPassword","value","signOut"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport {db, auth, storage} from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n//import {Button} from '@material-ui/core';\nimport {Input} from '@material-ui/core';\n//import VerifyEmail from './VerifyEmail';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport RecoverAccount from './RecoverAccount';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport './ImageUpload.css';\n\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction Home() {\n/*states...how you set variables in react*/\nconst classes = useStyles();\n// getModalStyle is not a pure function, we roll the style only on the first render\nconst [modalStyle] = useState(getModalStyle);\nconst [open,setOpen] = useState(false);\nconst [openImg, setOpenImg] = useState(false);\nconst [caption, setCaption] = useState('');\nconst [image, setImage] = useState(null); //state for the progress bar\nconst [progress, setProgress] = useState(0);\n\nconst [posts, setPosts] = useState([]);\nconst [openSignIn, setOpenSignIn] = useState(false);\nconst [username,setUsername] = useState('');\nconst [password,setPassword] = useState('');\nconst [email,setEmail] = useState('');\nconst [user,setUser] = useState(null); //state to keep track of the user\n\n    \n\nconst handleChange =  (e) => {//handleChange function fires off an event\n    if (e.target.files[0]) { //get the first file you selected\n        setImage(e.target.files[0]); //set the image in state to that file\n    }\n};\n\nconst handleUpload = () => {\n    //access the storage in firebase, get a references to the folder images/ and store image there\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n    uploadTask.on(\n        \"state_changed\",\n        /*provide snapshot of the image uploading progress via an equation*/\n        (snapshot) => {\n            //progress function ...\n            const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n            );\n            setProgress(progress);\n        },\n        (error) => {\n            //error function ..\n            console.log(error);\n            alert(error.message);\n        },\n        () => {\n            // complete function ...\n            storage\n                .ref(\"images\")\n                .child(image.name)\n                .getDownloadURL()   //GET DOWNLOAD LINK TO THE IMAGE\n                .then(url => {\n                    //post image inside db\n                    db.collection(\"posts\").add({\n                        //get server timestamp so images are sorted by time posted\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                        caption: caption,\n                        imageUrl: url,\n                        username: username\n                    });\n\n                    setProgress(0); //reset progress\n                    setCaption(\"\");\n                    setImage(null);\n                });\n        }\n    );\n};\n\nuseEffect(() => {\n  \n    const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);  //check the console if someone is there or not\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {\n          //dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set their display name in firebase\n        });\n        }\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe ();\n    }\n}, [user, username]);\n\n//useEffect runs a piece of code based on a specific condition\nuseEffect(() => {\n  //this is where the code runs\n  //snapshot is a powerful listener that will run the code when a post is made\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //everytime a new post is added, this code fires...\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id, //the post ids\n      post: doc.data()\n    })));\n  })\n}, []);//[] symbol means run the code once\n\n//sign up function. Fired up by the button\nconst signUp = (event) => {\n  event.preventDefault(); //avoid refresh when sign up button is clicked\n\n  //verify email\n  auth.onAuthStateChanged(function (firebaseUser) {\n    if (firebaseUser) {\n      firebaseUser.sendEmailVerification().then(function() {\n        // Email sent.\n        //alert(\"Your email verification code has been sent\")\n      }, function(error) {\n        // An error happened.\n       alert(error.message)\n      })\n\n    } else {\n      \n    }\n});\n\n\nauth\n    .createUserWithEmailAndPassword(email, password)  //create user\n    .then((authUser) => {\n    return authUser.user.updateProfile({\n    displayName: username\n    })  \n  }\n\n  )\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n\n  setOpen(false); //close modal after signing up\n\n  \n}\n\n\n//sign in function. Fired up by the button\nconst signIn = (event) => {\n  event.preventDefault(); //avoid refresh when sign in button is clicked\n\n  \n  auth\n  .signInWithEmailAndPassword(email, password)\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n  \n  setOpenSignIn(false); //close modal after signing in\n}\n\n\n\n  return (\n    <div className=\"app\">\n      {/*using BEM naming convetion*/}\n\n\n      {user?.displayName ?(//access only when user is signed in\n        <ImageUpload username={user.displayName} />\n      ):\n      (\n          <h7>Sorry you need to login to upload</h7>\n      )}\n\n\n\n\n      <Modal //Sign up Modal\n        open = {open} //state to keep track if its open\n        onClose={() => setOpen(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <AccountCircleOutlinedIcon/>\n            <Input \n                placeholder = \"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <button type=\"submit\" onClick={signUp}>Sign Up</button>\n              \n          </form>\n        </div>\n      </Modal>\n  \n\n      <Modal //Sign Out and Login Modal\n        open = {openSignIn} //state to keep track if its open\n        onClose={() => setOpenSignIn(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              \n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              \n              <button type=\"submit\" onClick={signIn}>Sign In</button>\n              \n          </form>\n        </div>\n      </Modal>\n\n      <Modal //Sign up Modal\n        open = {open} //state to keep track if its open\n        onClose={() => setOpenImg(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <div className=\"imageupload\">\n        <progress className=\"imageupload__progress\" value={progress} max=\"100\"/>\n           <input type=\"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\n           <input type=\"file\" onChange={handleChange} />\n           <button onClick={handleUpload}>Upload</button>\n            </div>\n              \n          </form>\n        </div>\n      </Modal>     \n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"50px\"\n          height=\"50px\"\n        />\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <button onClick={() => auth.signOut()}>Logout</button>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n        </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n          <Post key={id} postId={id} user= {user} username={post.username} caption={post.caption} imageUrl={post.imageUrl}></Post>\n\n        ))\n      }\n      </div>\n      </div>\n        \n       \n    <div className=\"app__bottom\">\n    <BottomNavigation>\n    <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/\"/>\n    <BottomNavigationAction label=\"AddBox\" icon={<AddBoxOutlinedIcon />} component={Link} to=\"/RecoverAccount\"/>\n    <BottomNavigationAction label=\"Notifications\" icon={<NotificationsNoneOutlinedIcon/>} onClick={() => setOpenImg(true)}/>\n    <BottomNavigationAction label=\"Account\" icon={<AccountCircleOutlinedIcon />} />\n    </BottomNavigation>\n    </div>\n    \n   \n\n    </div>\n\n    \n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}