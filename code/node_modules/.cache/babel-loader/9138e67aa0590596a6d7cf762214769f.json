{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal'; //import {Button} from '@material-ui/core';\n\nimport { Input } from '@material-ui/core'; //import ImageUpload from './ImageUpload';\n//import VerifyEmail from './VerifyEmail';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { Link } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport { storage } from './firebase';\nimport './ImageUpload.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; //import Button from '@material-ui/core/Button';\n\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Home() {\n  _s();\n\n  /*states...how you set variables in react*/\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [openAdmin, setOpenAdmin] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n  //IMAGE UPLOAD STATES\n\n  const [openP, setOpenP] = useState(false);\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null); //state for the progress bar\n\n  const [progress, setProgress] = useState(0);\n  const [openProgress, setOpenProgress] = useState(false); //progress bar state\n\n  const [keyword, setKeyword] = React.useState('');\n  const [openDropDown, setOpenDropDown] = React.useState(false);\n\n  const handleChangeDropDown = event => {\n    setKeyword(event.target.value);\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenDropDown(false);\n  };\n\n  const handleOpenDropDown = () => {\n    setOpenDropDown(true);\n  }; //imageupload functions\n\n\n  const handleChange = e => {\n    //handleChange function fires off an event\n    if (e.target.files[0]) {\n      //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault(); //avoid refresh when upload button is clicked\n    //access the storage in firebase, get a references to the folder images/ and store image there\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\",\n    /*provide snapshot of the image uploading progress via an equation*/\n    snapshot => {\n      //progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error function ..\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL() //GET DOWNLOAD LINK TO THE IMAGE\n      .then(url => {\n        //post image inside db\n        db.collection(\"posts\").add({\n          //get server timestamp so images are sorted by time posted\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: user.displayName,\n          keyword: keyword\n        });\n        setProgress(0); //reset progress\n\n        setCaption(\"\");\n        setImage(null);\n        setKeyword(\"\");\n      });\n    });\n    setOpenP(false); //close modal after upload\n\n    setOpenProgress(true); //open progress modal\n\n    setOpenProgress(false); //never mind, dont show progress bar modal\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n  //sign up function. Fired up by the button\n\n  const signUp = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n    //verify email\n\n    auth.onAuthStateChanged(function (firebaseUser) {\n      if (firebaseUser) {\n        firebaseUser.sendEmailVerification().then(function () {// Email sent.\n          //alert(\"Your email verification code has been sent\")\n        }, function (error) {\n          // An error happened.\n          alert(error.message);\n        });\n      } else {}\n    });\n    auth.createUserWithEmailAndPassword(email, password) //create user\n    .then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpen(false); //close modal after signing up\n  }; //sign in function. Fired up by the button\n\n\n  const signIn = event => {\n    event.preventDefault(); //avoid refresh when sign in button is clicked\n\n    auth.signInWithEmailAndPassword(email, password) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpenSignIn(false); //close modal after signing in\n  };\n\n  const myFunction = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n\n    var age = document.getElementById(\"pass\").value;\n    age == 70321 ? window.location = \"/\" : console.log(\"Joey Marshall\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Modal //Sign up Modal\n    , {\n      open: open //state to keep track if its open\n      ,\n      onClose: () => setOpen(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signUp,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign Out and Login Modal\n    , {\n      open: openSignIn //state to keep track if its open\n      ,\n      onClose: () => setOpenSignIn(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"100px\",\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign Out and Login Modal\n    , {\n      open: openAdmin //state to keep track if its open\n      ,\n      onClose: () => setOpenAdmin(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"100px\",\n              height: \"100px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Authorization Code\",\n            id: \"pass\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: myFunction,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openP //state to keep track if its open\n      ,\n      onClose: () => setOpenP(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageupload\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-controlled-open-select-label\",\n              children: \"Choose a keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-controlled-open-select-label\",\n              id: \"demo-controlled-open-select\",\n              open: openDropDown,\n              onClose: handleCloseDropDown,\n              onOpen: handleOpenDropDown,\n              value: keyword,\n              onChange: handleChangeDropDown,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"--Choose a keyword--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pothole\",\n                children: \"Pothole\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Water Spill\",\n                children: \"Water Spill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sinkhole\",\n                children: \"Sinkhole\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter a caption...\",\n            onChange: event => setCaption(event.target.value),\n            value: caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openProgress //state to keep track if its open\n      ,\n      onClose: () => setOpenProgress(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"progress\", {\n          className: \"imageupload__progress\",\n          value: progress,\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app__headerImage\",\n        src: logo,\n        alt: \"\",\n        width: \"60px\",\n        height: \"60px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //if the user exists, show a Logout button\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenAdmin(true),\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => auth.signOut(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      //else, show a sign up button\n      _jsxDEV(\"div\", {\n        className: \"app__loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSignIn(true),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_postsRight\",\n        children:\n        /*loop through posts in state*/\n        posts.map(({\n          id,\n          post\n        }) =>\n        /*#__PURE__*/\n        //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n        _jsxDEV(Post, {\n          postId: id,\n          user: user,\n          username: post.username,\n          caption: post.caption,\n          imageUrl: post.imageUrl,\n          keyword: post.keyword\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 10\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n    /*#__PURE__*/\n    //access only when user is signed in\n    _jsxDEV(\"div\", {\n      className: \"app__bottom\",\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation // showLabels\n      // className={classes.root}\n      , {\n        children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 46\n          }, this),\n          component: Link,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Post\",\n          icon: /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 46\n          }, this),\n          component: Link,\n          onClick: () => setOpenP(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Nav\",\n          icon: /*#__PURE__*/_jsxDEV(NotificationsNoneOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 45\n          }, this),\n          component: Link\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Profile\",\n          icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 49\n          }, this),\n          component: Link,\n          to: \"/Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }, this) //hide navigation bar when user is not signed in\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"J3FrSXqG9Q7Jz+6uleIomal1O64=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/Home.js"],"names":["React","useState","useEffect","logo","Post","db","auth","makeStyles","Modal","Input","AccountCircleOutlinedIcon","EmailOutlinedIcon","LockOutlinedIcon","BottomNavigation","HomeOutlinedIcon","AddBoxOutlinedIcon","NotificationsNoneOutlinedIcon","BottomNavigationAction","Link","firebase","storage","InputLabel","MenuItem","FormControl","Select","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Home","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","openAdmin","setOpenAdmin","username","setUsername","password","setPassword","email","setEmail","user","setUser","openP","setOpenP","caption","setCaption","image","setImage","progress","setProgress","openProgress","setOpenProgress","keyword","setKeyword","openDropDown","setOpenDropDown","handleChangeDropDown","event","target","value","handleCloseDropDown","handleOpenDropDown","handleChange","e","files","handleUpload","preventDefault","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","displayName","unsubscribe","onAuthStateChanged","authUser","updateProfile","orderBy","onSnapshot","docs","map","doc","id","post","data","signUp","firebaseUser","sendEmailVerification","createUserWithEmailAndPassword","catch","signIn","signInWithEmailAndPassword","myFunction","age","document","getElementById","window","location","formControl","signOut"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,EAAR,EAAYC,IAAZ,QAAuB,YAAvB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,SAAQC,KAAR,QAAoB,mBAApB,C,CACA;AACA;;AACA,OAAOC,yBAAP,MAAsC,0CAAtC;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,6BAAP,MAA0C,8CAA1C;AACA,OAAOC,sBAAP,MAAmC,0CAAnC;AAEA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAO,mBAAP;AAGA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB,C,CACA;;AAKA;;AACA,SAASC,aAAT,GAAyB;AACvB,QAAMC,GAAG,GAAG,EAAZ;AACA,QAAMC,IAAI,GAAG,EAAb;AAEA,SAAO;AACLD,IAAAA,GAAG,EAAG,GAAEA,GAAI,GADP;AAELC,IAAAA,IAAI,EAAG,GAAEA,IAAK,GAFT;AAGLC,IAAAA,SAAS,EAAG,cAAaF,GAAI,OAAMC,IAAK;AAHnC,GAAP;AAKD;;AACD,MAAME,SAAS,GAAGtB,UAAU,CAAEuB,KAAD,KAAY;AACvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,KAAK,EAAE,GAFF;AAGLC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBL,KAHrC;AAILM,IAAAA,MAAM,EAAE,gBAJH;AAKLC,IAAAA,SAAS,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CALN;AAMLC,IAAAA,OAAO,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AANJ;AADgC,CAAZ,CAAD,CAA5B;;AAaA,SAASC,IAAT,GAAgB;AAAA;;AAChB;AACA,QAAMC,OAAO,GAAGd,SAAS,EAAzB,CAFgB,CAGhB;;AACA,QAAM,CAACe,UAAD,IAAe3C,QAAQ,CAACwB,aAAD,CAA7B;AAEA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoB7C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC8C,IAAD,EAAMC,OAAN,IAAiB/C,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM,CAACgD,UAAD,EAAaC,aAAb,IAA8BjD,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACkD,SAAD,EAAYC,YAAZ,IAA4BnD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoD,QAAD,EAAUC,WAAV,IAAyBrD,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACsD,QAAD,EAAUC,WAAV,IAAyBvD,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACwD,KAAD,EAAOC,QAAP,IAAmBzD,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAAC0D,IAAD,EAAMC,OAAN,IAAiB3D,QAAQ,CAAC,IAAD,CAA/B,CAbgB,CAauB;AAGvC;;AACA,QAAM,CAAC4D,KAAD,EAAOC,QAAP,IAAmB7D,QAAQ,CAAC,KAAD,CAAjC;AACA,QAAM,CAAC8D,OAAD,EAAUC,UAAV,IAAwB/D,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgE,KAAD,EAAQC,QAAR,IAAoBjE,QAAQ,CAAC,IAAD,CAAlC,CAnBgB,CAmB0B;;AAE1C,QAAM,CAACkE,QAAD,EAAWC,WAAX,IAA0BnE,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACoE,YAAD,EAAcC,eAAd,IAAiCrE,QAAQ,CAAC,KAAD,CAA/C,CAtBgB,CAsByC;;AAEzD,QAAM,CAACsE,OAAD,EAAUC,UAAV,IAAwBxE,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9B;AACE,QAAM,CAACwE,YAAD,EAAeC,eAAf,IAAkC1E,KAAK,CAACC,QAAN,CAAe,KAAf,CAAxC;;AAEA,QAAM0E,oBAAoB,GAAIC,KAAD,IAAW;AACtCJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCL,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMM,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD,CAnCc,CAwChB;;;AACA,QAAMO,YAAY,GAAKC,CAAD,IAAO;AAAC;AAC5B,QAAIA,CAAC,CAACL,MAAF,CAASM,KAAT,CAAe,CAAf,CAAJ,EAAuB;AAAE;AACrBjB,MAAAA,QAAQ,CAACgB,CAAC,CAACL,MAAF,CAASM,KAAT,CAAe,CAAf,CAAD,CAAR,CADmB,CACU;AAChC;AACF,GAJD;;AASE,QAAMC,YAAY,GAAIR,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACS,cAAN,GADgC,CACR;AAExB;;AAEC,UAAMC,UAAU,GAAGlE,OAAO,CAACmE,GAAR,CAAa,UAAStB,KAAK,CAACuB,IAAK,EAAjC,EAAoCC,GAApC,CAAwCxB,KAAxC,CAAnB;AAECqB,IAAAA,UAAU,CAACI,EAAX,CACE,eADF;AAEE;AACEC,IAAAA,QAAD,IAAc;AACX;AACA,YAAMxB,QAAQ,GAAGyB,IAAI,CAACC,KAAL,CACZF,QAAQ,CAACG,gBAAT,GAA4BH,QAAQ,CAACI,UAAtC,GAAoD,GADvC,CAAjB;AAGA3B,MAAAA,WAAW,CAACD,QAAD,CAAX;AACH,KATH,EAUG6B,KAAD,IAAW;AACP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAG,MAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACH,KAdH,EAeE,MAAM;AACF;AACAhF,MAAAA,OAAO,CACFmE,GADL,CACS,QADT,EAEKc,KAFL,CAEWpC,KAAK,CAACuB,IAFjB,EAGKc,cAHL,GAGwB;AAHxB,OAIKC,IAJL,CAIUC,GAAG,IAAI;AACT;AACAnG,QAAAA,EAAE,CAACoG,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AACvB;AACAC,UAAAA,SAAS,EAAExF,QAAQ,CAACyF,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B,EAFY;AAGvB/C,UAAAA,OAAO,EAAEA,OAHc;AAIvBgD,UAAAA,QAAQ,EAAEP,GAJa;AAKvBnD,UAAAA,QAAQ,EAAEM,IAAI,CAACqD,WALQ;AAMvBzC,UAAAA,OAAO,EAAEA;AANc,SAA3B;AASAH,QAAAA,WAAW,CAAC,CAAD,CAAX,CAXS,CAWO;;AAChBJ,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OAnBL;AAoBH,KArCH;AAyCHV,IAAAA,QAAQ,CAAC,KAAD,CAAR,CAhDiC,CAgDhB;;AACjBQ,IAAAA,eAAe,CAAC,IAAD,CAAf,CAjDiC,CAiDV;;AACvBA,IAAAA,eAAe,CAAC,KAAD,CAAf,CAlDiC,CAkDT;AAGxB,GArDC;;AA2DFpE,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAM+G,WAAW,GAAG3G,IAAI,CAAC4G,kBAAL,CAAyBC,QAAD,IAAc;AAAE;AAC1D,UAAIA,QAAJ,EAAc;AACZ;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ,EAFY,CAEY;;AACxBvD,QAAAA,OAAO,CAACuD,QAAD,CAAP,CAHY,CAGO;;AAEnB,YAAIA,QAAQ,CAACH,WAAb,EAA0B,CACxB;AACD,SAFD,MAEO;AACL;AACA,iBAAOG,QAAQ,CAACC,aAAT,CAAuB;AAC5BJ,YAAAA,WAAW,EAAE3D,QADe,CACL;;AADK,WAAvB,CAAP;AAGD;AAEF,OAdD,MAcO;AACL;AACAO,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,KAnBmB,CAApB;AAqBA,WAAO,MAAM;AACX;AACAqD,MAAAA,WAAW;AACZ,KAHD;AAIH,GA3BQ,EA4BR,CAACtD,IAAD,EAAON,QAAP,CA5BQ,CAAT,CA7GgB,CA2IhB;;AACCnD,EAAAA,SAAS,CAAC,MAAM;AACf;AACA;AACAG,IAAAA,EAAE,CAACoG,UAAH,CAAc,OAAd,EAAuBY,OAAvB,CAA+B,WAA/B,EAA4C,MAA5C,EAAoDC,UAApD,CAA+D3B,QAAQ,IAAI;AACzE;AACA7C,MAAAA,QAAQ,CAAC6C,QAAQ,CAAC4B,IAAT,CAAcC,GAAd,CAAkBC,GAAG,KAAK;AACjCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADyB;AACrB;AACZC,QAAAA,IAAI,EAAEF,GAAG,CAACG,IAAJ;AAF2B,OAAL,CAArB,CAAD,CAAR;AAID,KAND;AAOD,GAVS,EAUP,EAVO,CAAT,CA5Ie,CAsJR;AAER;;AACA,QAAMC,MAAM,GAAIjD,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACS,cAAN,GADwB,CACA;AAExB;;AACA/E,IAAAA,IAAI,CAAC4G,kBAAL,CAAwB,UAAUY,YAAV,EAAwB;AAC9C,UAAIA,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACC,qBAAb,GAAqCxB,IAArC,CAA0C,YAAW,CACnD;AACA;AACD,SAHD,EAGG,UAASP,KAAT,EAAgB;AACjB;AACDG,UAAAA,KAAK,CAACH,KAAK,CAACI,OAAP,CAAL;AACA,SAND;AAQD,OATD,MASO,CAEN;AACJ,KAbC;AAeF9F,IAAAA,IAAI,CACC0H,8BADL,CACoCvE,KADpC,EAC2CF,QAD3C,EACsD;AADtD,KAEKgD,IAFL,CAEWY,QAAD,IAAc;AACpB,aAAOA,QAAQ,CAACxD,IAAT,CAAcyD,aAAd,CAA4B;AACnCJ,QAAAA,WAAW,EAAE3D;AADsB,OAA5B,CAAP;AAGD,KANH,EASE;AATF,KAUG4E,KAVH,CAUUjC,KAAD,IAAWG,KAAK,CAACH,KAAK,CAACI,OAAP,CAVzB,EAnB0B,CA6BgB;;AAExCpD,IAAAA,OAAO,CAAC,KAAD,CAAP,CA/BwB,CA+BR;AAGjB,GAlCD,CAzJgB,CA8LhB;;;AACA,QAAMkF,MAAM,GAAItD,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACS,cAAN,GADwB,CACA;;AAGxB/E,IAAAA,IAAI,CACH6H,0BADD,CAC4B1E,KAD5B,EACmCF,QADnC,EAEA;AAFA,KAGC0E,KAHD,CAGQjC,KAAD,IAAWG,KAAK,CAACH,KAAK,CAACI,OAAP,CAHvB,EAJwB,CAOgB;;AAExClD,IAAAA,aAAa,CAAC,KAAD,CAAb,CATwB,CASF;AACvB,GAVD;;AAaA,QAAMkF,UAAU,GAAIxD,KAAD,IAAS;AAC1BA,IAAAA,KAAK,CAACS,cAAN,GAD0B,CACF;;AAExB,QAAIgD,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCzD,KAA1C;AACCuD,IAAAA,GAAG,IAAI,KAAR,GAAiBG,MAAM,CAACC,QAAP,GAAkB,GAAnC,GAAyCxC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAzC;AAED,GAND;;AAOE,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAcE,QAAC,KAAD,CAAO;AAAP;AACE,MAAA,IAAI,EAAInD,IADV,CACgB;AADhB;AAEE,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAFxB,CAEiC;AAFjC;AAAA,6BAIE;AAAK,QAAA,KAAK,EAAEJ,UAAZ;AAAwB,QAAA,SAAS,EAAED,OAAO,CAACZ,KAA3C;AAAA,+BACE;AAAM,UAAA,SAAS,EAAE,aAAjB;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,GAAG,EAAE5B,IAFP;AAGE,cAAA,GAAG,EAAC,EAHN;AAIE,cAAA,KAAK,EAAC,MAJR;AAKE,cAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE,QAAC,KAAD;AACI,YAAA,WAAW,EAAG,UADlB;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,KAAK,EAAEkD,QAHX;AAII,YAAA,QAAQ,EAAG6B,CAAD,IAAO5B,WAAW,CAAC4B,CAAC,CAACL,MAAF,CAASC,KAAV;AAJhC;AAAA;AAAA;AAAA;AAAA,kBAZF,eAkBI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBAlBJ,eAmBI,QAAC,KAAD;AACE,YAAA,WAAW,EAAG,OADhB;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAErB,KAHT;AAIE,YAAA,QAAQ,EAAGyB,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACL,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eAyBI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAzBJ,eA0BI,QAAC,KAAD;AACE,YAAA,WAAW,EAAG,UADhB;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAEvB,QAHT;AAIE,YAAA,QAAQ,EAAG2B,CAAD,IAAO1B,WAAW,CAAC0B,CAAC,CAACL,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBA1BJ,eAgCI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE+C,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAdF,eA0DE,QAAC,KAAD,CAAO;AAAP;AACE,MAAA,IAAI,EAAI5E,UADV,CACsB;AADtB;AAEE,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAF9B,CAEuC;AAFvC;AAAA,6BAIE;AAAK,QAAA,KAAK,EAAEN,UAAZ;AAAwB,QAAA,SAAS,EAAED,OAAO,CAACZ,KAA3C;AAAA,+BACE;AAAM,UAAA,SAAS,EAAE,aAAjB;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,GAAG,EAAE5B,IAFP;AAGE,cAAA,GAAG,EAAC,EAHN;AAIE,cAAA,KAAK,EAAC,OAJR;AAKE,cAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYI,QAAC,KAAD;AACE,YAAA,WAAW,EAAG,OADhB;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,KAAK,EAAEsD,KAHT;AAIE,YAAA,QAAQ,EAAGyB,CAAD,IAAOxB,QAAQ,CAACwB,CAAC,CAACL,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAmBI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAnBJ,eAoBI,QAAC,KAAD;AACE,YAAA,WAAW,EAAG,UADhB;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,KAAK,EAAEvB,QAHT;AAIE,YAAA,QAAQ,EAAG2B,CAAD,IAAO1B,WAAW,CAAC0B,CAAC,CAACL,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,kBApBJ,eA2BI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEoD,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YA1DF,eAmGE,QAAC,KAAD,CAAO;AAAP;AACE,MAAA,IAAI,EAAI/E,SADV,CACqB;AADrB;AAEE,MAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAF7B,CAEsC;AAFtC;AAAA,6BAIE;AAAK,QAAA,KAAK,EAAER,UAAZ;AAAwB,QAAA,SAAS,EAAED,OAAO,CAACZ,KAA3C;AAAA,+BACE;AAAM,UAAA,SAAS,EAAE,aAAjB;AAAA,kCACE;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,kBADZ;AAEE,cAAA,GAAG,EAAE5B,IAFP;AAGE,cAAA,GAAG,EAAC,EAHN;AAIE,cAAA,KAAK,EAAC,OAJR;AAKE,cAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAaI,QAAC,KAAD;AACE,YAAA,WAAW,EAAG,oBADhB;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,KAAK,EAAEoD,QAJT;AAKE,YAAA,QAAQ,EAAG2B,CAAD,IAAO1B,WAAW,CAAC0B,CAAC,CAACL,MAAF,CAASC,KAAV;AAL9B;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAqBI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEsD,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAnGF,eAqIJ,QAAC,KAAD;AACQ,MAAA,IAAI,EAAIvE,KADhB,CACuB;AADvB;AAEQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAAC,KAAD,CAF/B,CAEwC;AAFxC;AAAA,6BAIQ;AAAK,QAAA,KAAK,EAAElB,UAAZ;AAAwB,QAAA,SAAS,EAAED,OAAO,CAACZ,KAA3C;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCAIA;AAAA,mCACI;AACI,cAAA,SAAS,EAAC,kBADd;AAEI,cAAA,GAAG,EAAE5B,IAFT;AAGI,cAAA,GAAG,EAAC,EAHR;AAII,cAAA,KAAK,EAAC,MAJV;AAKI,cAAA,MAAM,EAAC;AALX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJA,eAaI,QAAC,WAAD;AAAa,YAAA,SAAS,EAAEwC,OAAO,CAAC+F,WAAhC;AAAA,oCAGJ,QAAC,UAAD;AAAY,cAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHI,eAIJ,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,mCADV;AAEE,cAAA,EAAE,EAAC,6BAFL;AAGE,cAAA,IAAI,EAAEjE,YAHR;AAIE,cAAA,OAAO,EAAEM,mBAJX;AAKE,cAAA,MAAM,EAAEC,kBALV;AAME,cAAA,KAAK,EAAET,OANT;AAOE,cAAA,QAAQ,EAAEI,oBAPZ;AAAA,sCASE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,EAAhB;AAAA,uCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF,eAYE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAaE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbF,eAcE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAoCG;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,WAAW,EAAC,oBAA/B;AAAoD,YAAA,QAAQ,EAAEC,KAAK,IAAIZ,UAAU,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjF;AAAuG,YAAA,KAAK,EAAEf;AAA9G;AAAA;AAAA;AAAA;AAAA,kBApCH,eAqCG;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,QAAQ,EAAEkB;AAA7B;AAAA;AAAA;AAAA;AAAA,kBArCH,eAuCG;AAAQ,YAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCH;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,YArII,eAyLE,QAAC,KAAD;AACE,MAAA,IAAI,EAAIf,YADV,CACwB;AADxB;AAEE,MAAA,OAAO,EAAE,MAAMC,eAAe,CAAC,KAAD,CAFhC,CAEyC;AAFzC;AAAA,6BAIE;AAAK,QAAA,KAAK,EAAE1B,UAAZ;AAAwB,QAAA,SAAS,EAAED,OAAO,CAACZ,KAA3C;AAAA,+BACF;AAAU,UAAA,SAAS,EAAC,uBAApB;AAA4C,UAAA,KAAK,EAAEoC,QAAnD;AAA6D,UAAA,GAAG,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YAzLF,eAuME;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAIE;AAEE,QAAA,SAAS,EAAC,kBAFZ;AAGE,QAAA,GAAG,EAAEhE,IAHP;AAIE,QAAA,GAAG,EAAC,EAJN;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,MAAM,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,cAJF,EAoBG,CAAAwD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEqD,WAAN;AAAA;AAAqB;AACtB;AAAA,gCAEE;AAAQ,UAAA,OAAO,EAAE,MAAM5D,YAAY,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGC;AAAQ,UAAA,OAAO,EAAE,MAAM9C,IAAI,CAACqI,OAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cADC;AAAA;AAMG;AACF;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCAEF;AAAQ,UAAA,OAAO,EAAE,MAAMzF,aAAa,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFE,eAGF;AAAQ,UAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHE;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAvMF,eA2OE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA;AAOA;AACAH,QAAAA,KAAK,CAAC2E,GAAN,CAAU,CAAC;AAACE,UAAAA,EAAD;AAAKC,UAAAA;AAAL,SAAD;AAAA;AACR;AACD,gBAAC,IAAD;AAAe,UAAA,MAAM,EAAED,EAAvB;AAA2B,UAAA,IAAI,EAAG/D,IAAlC;AAAwC,UAAA,QAAQ,EAAEgE,IAAI,CAACtE,QAAvD;AAAiE,UAAA,OAAO,EAAEsE,IAAI,CAAC5D,OAA/E;AAAwF,UAAA,QAAQ,EAAE4D,IAAI,CAACZ,QAAvG;AAAiH,UAAA,OAAO,EAAEY,IAAI,CAACpD;AAA/H,WAAWmD,EAAX;AAAA;AAAA;AAAA;AAAA,gBAFD;AARA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3OF,EAwQH,CAAA/D,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEqD,WAAN;AAAA;AAAoB;AAGf;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA,QAAC,gBAAD,CACC;AACA;AAFD;AAAA,gCAKJ,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,MAA9B;AAAqC,UAAA,IAAI,eAAE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAA3C;AAAiE,UAAA,SAAS,EAAE9F,IAA5E;AAAkF,UAAA,EAAE,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,gBALI,eAMJ,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,MAA9B;AAAqC,UAAA,IAAI,eAAE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,kBAA3C;AAAmE,UAAA,SAAS,EAAEA,IAA9E;AAAoF,UAAA,OAAO,EAAE,MAAM4C,QAAQ,CAAC,IAAD;AAA3G;AAAA;AAAA;AAAA;AAAA,gBANI,eAOJ,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,KAA9B;AAAoC,UAAA,IAAI,eAAE,QAAC,6BAAD;AAAA;AAAA;AAAA;AAAA,kBAA1C;AAA6E,UAAA,SAAS,EAAE5C;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAPI,eAQJ,QAAC,sBAAD;AAAwB,UAAA,KAAK,EAAC,SAA9B;AAAwC,UAAA,IAAI,eAAE,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAA6E,UAAA,SAAS,EAAEA,IAAxF;AAA8F,UAAA,EAAE,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,gBARI;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHL,gBAkBO;AAAA;AAAA;AAAA;AAAA,YAlBP,CAkBiB;AA1Rd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqSD;;GAxfQwB,I;UAEOb,S;;;KAFPa,I;AA0fT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\nimport {db, auth} from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n//import {Button} from '@material-ui/core';\nimport {Input} from '@material-ui/core';\n//import ImageUpload from './ImageUpload';\n//import VerifyEmail from './VerifyEmail';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport {Link} from 'react-router-dom';\n\nimport firebase from \"firebase\";\nimport {storage} from './firebase';\nimport './ImageUpload.css';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import Button from '@material-ui/core/Button';\n\n\n\n\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction Home() {\n/*states...how you set variables in react*/\nconst classes = useStyles();\n// getModalStyle is not a pure function, we roll the style only on the first render\nconst [modalStyle] = useState(getModalStyle);\n\nconst [posts, setPosts] = useState([]);\nconst [open,setOpen] = useState(false);\nconst [openSignIn, setOpenSignIn] = useState(false);\nconst [openAdmin, setOpenAdmin] = useState(false);\nconst [username,setUsername] = useState('');\nconst [password,setPassword] = useState('');\nconst [email,setEmail] = useState('');\nconst [user,setUser] = useState(null); //state to keep track of the user\n\n\n//IMAGE UPLOAD STATES\nconst [openP,setOpenP] = useState(false);\nconst [caption, setCaption] = useState('');\nconst [image, setImage] = useState(null); //state for the progress bar\n\nconst [progress, setProgress] = useState(0);\nconst [openProgress,setOpenProgress] = useState(false);  //progress bar state\n\nconst [keyword, setKeyword] = React.useState('');\n  const [openDropDown, setOpenDropDown] = React.useState(false);\n\n  const handleChangeDropDown = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenDropDown(false);\n  };\n\n  const handleOpenDropDown = () => {\n    setOpenDropDown(true);\n  };\n\n\n//imageupload functions\nconst handleChange =  (e) => {//handleChange function fires off an event\n  if (e.target.files[0]) { //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n  }\n};\n\n\n\n\n  const handleUpload = (event) => {\n  event.preventDefault(); //avoid refresh when upload button is clicked\n\n  //access the storage in firebase, get a references to the folder images/ and store image there\n\n   const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    \n    uploadTask.on(\n      \"state_changed\",\n      /*provide snapshot of the image uploading progress via an equation*/\n       (snapshot) => {\n          //progress function ...\n          const progress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n      },\n      (error) => {\n          //error function ..\n          console.log(error);\n          alert(error.message);\n      }, \n      () => {\n          // complete function ...\n          storage\n              .ref(\"images\")\n              .child(image.name)\n              .getDownloadURL()   //GET DOWNLOAD LINK TO THE IMAGE\n              .then(url => {\n                  //post image inside db\n                  db.collection(\"posts\").add({\n                      //get server timestamp so images are sorted by time posted\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                      caption: caption,\n                      imageUrl: url,\n                      username: user.displayName,\n                      keyword: keyword\n                  });\n\n                  setProgress(0); //reset progress\n                  setCaption(\"\");\n                  setImage(null);\n                  setKeyword(\"\");\n              });\n      }\n  );\n\n \n setOpenP(false); //close modal after upload\n setOpenProgress(true); //open progress modal\n setOpenProgress(false); //never mind, dont show progress bar modal\n\n\n};\n\n\n\n\n\nuseEffect(() => {\n  \n    const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);  //check the console if someone is there or not\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {\n          //dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set their display name in firebase\n        });\n        }\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe ();\n    }\n},\n [user, username]);\n\n//useEffect runs a piece of code based on a specific condition\n useEffect(() => {\n  //this is where the code runs\n  //snapshot is a powerful listener that will run the code when a post is made\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //everytime a new post is added, this code fires...\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id, //the post ids\n      post: doc.data()\n    })));\n  })\n}, []); //[] symbol means run the code once\n\n//sign up function. Fired up by the button\nconst signUp = (event) => {\n  event.preventDefault(); //avoid refresh when sign up button is clicked\n\n  //verify email\n  auth.onAuthStateChanged(function (firebaseUser) {\n    if (firebaseUser) {\n      firebaseUser.sendEmailVerification().then(function() {\n        // Email sent.\n        //alert(\"Your email verification code has been sent\")\n      }, function(error) {\n        // An error happened.\n       alert(error.message)\n      })\n\n    } else {\n      \n    }\n});\n\nauth\n    .createUserWithEmailAndPassword(email, password)  //create user\n    .then((authUser) => {\n    return authUser.user.updateProfile({\n    displayName: username\n    })  \n  }\n\n  )\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n\n  setOpen(false); //close modal after signing up\n\n  \n}\n\n\n//sign in function. Fired up by the button\nconst signIn = (event) => {\n  event.preventDefault(); //avoid refresh when sign in button is clicked\n\n  \n  auth\n  .signInWithEmailAndPassword(email, password)\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n  \n  setOpenSignIn(false); //close modal after signing in\n}\n\n\nconst myFunction = (event)=>{\n  event.preventDefault(); //avoid refresh when sign up button is clicked\n\n  var age = document.getElementById(\"pass\").value;\n  (age == 70321) ? window.location = \"/\" : console.log(\"Joey Marshall\")\n\n}\n  return (\n    <div className=\"app\">\n      {/*using BEM naming convetion*/}\n\n{/* \n      {user?.displayName ?(//access only when user is signed in\n        <ImageUpload username={user.displayName} />\n      ):\n      (\n          <h7>Sorry you need to login to upload</h7>\n      )} \n */}\n\n\n\n      <Modal //Sign up Modal\n        open = {open} //state to keep track if its open\n        onClose={() => setOpen(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <AccountCircleOutlinedIcon/>\n            <Input \n                placeholder = \"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <button type=\"submit\" onClick={signUp}>Sign Up</button>\n              \n          </form>\n        </div>\n      </Modal>\n  \n\n      <Modal //Sign Out and Login Modal\n        open = {openSignIn} //state to keep track if its open\n        onClose={() => setOpenSignIn(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"100px\"\n                height=\"100px\"\n              />\n            </center>\n            \n            <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              \n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              \n              <button type=\"submit\" onClick={signIn}>Sign In</button>\n              \n          </form>\n        </div>\n      </Modal>\n\n\n{/* modal for admin*/}\n\n      <Modal //Sign Out and Login Modal\n        open = {openAdmin} //state to keep track if its open\n        onClose={() => setOpenAdmin(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"100px\"\n                height=\"100px\"\n              />\n            </center>\n            \n          \n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"Authorization Code\"\n                id=\"pass\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              \n              <button type=\"submit\" onClick={myFunction}>Submit</button>\n          </form>\n        </div>\n      </Modal>\n\n\n\n{/* modal for posting*/}\n<Modal \n        open = {openP} //state to keep track if its open\n        onClose={() => setOpenP(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n        <div className=\"imageupload\">\n         \n         \n         \n        <center>\n            <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            <FormControl className={classes.formControl}>\n            \n\n        <InputLabel id=\"demo-controlled-open-select-label\">Choose a keyword</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={openDropDown}\n          onClose={handleCloseDropDown}\n          onOpen={handleOpenDropDown}\n          value={keyword}\n          onChange={handleChangeDropDown}\n        >\n          <MenuItem value=\"\">\n            <em>--Choose a keyword--</em>\n          </MenuItem>\n          <MenuItem value={\"Pothole\"}>Pothole</MenuItem>\n          <MenuItem value={\"Water Spill\"}>Water Spill</MenuItem>\n          <MenuItem value={\"Sinkhole\"}>Sinkhole</MenuItem>\n        </Select>\n      </FormControl>\n \n\n           <input type=\"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\n           <input type=\"file\" onChange={handleChange} />\n\n           <button onClick={handleUpload}>\n            Upload\n           </button>\n        </div>\n        </div>\n        \n      </Modal>\n\n      <Modal \n        open = {openProgress} //state to keep track if its open\n        onClose={() => setOpenProgress(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\"/>\n      </div>\n      \n      </Modal>\n\n\n\n\n\n      <div className=\"app__header\">\n        \n       \n\n        <img\n        \n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"60px\"\n          height=\"60px\"\n          />\n\n\n \n\n\n{/**********************************************NEWWWWWWWWW***********************************************************************/}\n\n\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <div>\n          {/* <button>Are you an Admin??</button> */}\n          <button onClick={() => setOpenAdmin(true)}>Admin</button>\n         <button onClick={() => auth.signOut()}>Logout</button>\n        </div>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n            \n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n        </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n\n\n\n\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n         <Post key={id} postId={id} user= {user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} keyword={post.keyword}></Post>\n        ))\n        }\n      </div>\n      </div>\n        \n\n\n\n\n\n\n\n\n\n\n\n\n{user?.displayName ?(//access only when user is signed in\n\n \n      <div className=\"app__bottom\">\n      <BottomNavigation\n       // showLabels\n       // className={classes.root}\n        \n      >\n  <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/\" />\n  <BottomNavigationAction label=\"Post\" icon={<AddBoxOutlinedIcon />} component={Link} onClick={() => setOpenP(true)}/>\n  <BottomNavigationAction label=\"Nav\" icon={<NotificationsNoneOutlinedIcon />} component={Link}/>\n  <BottomNavigationAction label=\"Profile\" icon={<AccountCircleOutlinedIcon />} component={Link} to=\"/Profile\"/>\n\n</BottomNavigation>\n</div>\n     ):\n     (\n        <h7></h7> //hide navigation bar when user is not signed in\n    )}\n     \n\n    </div>\n  );\n\n\n\n  \n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}