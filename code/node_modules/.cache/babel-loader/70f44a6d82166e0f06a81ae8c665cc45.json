{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post'; //import RecoverAccount from './RecoverAccount';\n\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal'; //import {Button} from '@material-ui/core';\n\nimport { Input } from '@material-ui/core'; //import ImageUpload from './ImageUpload';\n//import VerifyEmail from './VerifyEmail';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { Link, withRouter } from 'react-router-dom';\nimport firebase from \"firebase\";\nimport { storage } from './firebase';\nimport './ImageUpload.css';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select'; //import Button from '@material-ui/core/Button';\n\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction UserProfile() {\n  _s();\n\n  /*states...how you set variables in react*/\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n  //IMAGE UPLOAD STATES\n\n  const [openP, setOpenP] = useState(false);\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState(null); //state for the progress bar\n\n  const [progress, setProgress] = useState(0);\n  const [comments, setComments] = useState([]); //keep track of the comments\n\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) //if a post id was passed true\n      {\n        unsubscribe = db.collection(\"posts\") //access the post collection\n        .where('uid', '==', uid).doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n          // get a snapshot listener for that comment\n          setComments(snapshot.docs.map(doc => doc.data()));\n        });\n      }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]); //function that submits comment into database for a specific post\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      //get the user who signed in from app.js\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(''); //clears the box\n  };\n\n  const [keyword, setKeyword] = React.useState('');\n  const [openDropDown, setOpenDropDown] = React.useState(false);\n\n  const handleChangeDropDown = event => {\n    setKeyword(event.target.value);\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenDropDown(false);\n  };\n\n  const handleOpenDropDown = () => {\n    setOpenDropDown(true);\n  }; //imageupload functions\n\n\n  const handleChange = e => {\n    //handleChange function fires off an event\n    if (e.target.files[0]) {\n      //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault(); //avoid refresh when upload button is clicked\n\n    let userr = firebase.auth().currentUser; //const id = uuid.v4()\n    //access the storage in firebase, get a references to the folder images/ and store image there\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\",\n    /*provide snapshot of the image uploading progress via an equation*/\n    snapshot => {\n      //progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error function ..\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL() //GET DOWNLOAD LINK TO THE IMAGE\n      .then(url => {\n        //post image inside db\n        db.collection(\"posts\").add({\n          //get server timestamp so images are sorted by time posted\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          username: user.displayName,\n          keyword: keyword,\n          uid: userr.uid //id: id\n\n        });\n        setProgress(0); //reset progress\n\n        setCaption(\"\");\n        setImage(null);\n        setKeyword(\"\");\n      });\n    }); //  setOpenP(false); //close modal after upload\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n  //sign up function. Fired up by the button\n\n  const signUp = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n    //verify email\n\n    auth.onAuthStateChanged(function (firebaseUser) {\n      if (firebaseUser) {\n        firebaseUser.sendEmailVerification().then(function () {// Email sent.\n          //alert(\"Your email verification code has been sent\")\n        }, function (error) {\n          // An error happened.\n          alert(error.message);\n        });\n      } else {}\n    });\n    auth.createUserWithEmailAndPassword(email, password) //create user\n    .then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpen(false); //close modal after signing up\n  }; //sign in function. Fired up by the button\n\n\n  const signIn = event => {\n    event.preventDefault(); //avoid refresh when sign in button is clicked\n\n    auth.signInWithEmailAndPassword(email, password) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpenSignIn(false); //close modal after signing in\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Modal //Sign up Modal\n    , {\n      open: open //state to keep track if its open\n      ,\n      onClose: () => setOpen(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"username\",\n            type: \"text\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signUp,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal //Sign Out and Login Modal\n    , {\n      open: openSignIn //state to keep track if its open\n      ,\n      onClose: () => setOpenSignIn(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"app__signup\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"email\",\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: signIn,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openP //state to keep track if its open\n      ,\n      onClose: () => setOpenP(false) //onClose method. closes the model when anywhere else on the screen is clicked\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: modalStyle,\n        className: classes.paper,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imageupload\",\n          children: [/*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"app__headerImage\",\n              src: logo,\n              alt: \"\",\n              width: \"50px\",\n              height: \"50px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-controlled-open-select-label\",\n              children: \"Choose a keyword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-controlled-open-select-label\",\n              id: \"demo-controlled-open-select\",\n              open: openDropDown,\n              onClose: handleCloseDropDown,\n              onOpen: handleOpenDropDown,\n              value: keyword,\n              onChange: handleChangeDropDown,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"--Choose a keyword--\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pothole\",\n                children: \"Pothole\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Water Spill\",\n                children: \"Water Spill\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sinkhole\",\n                children: \"Sinkhole\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter a caption...\",\n            onChange: event => setCaption(event.target.value),\n            value: caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n            className: \"imageupload__progress\",\n            value: progress,\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpload,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"app__headerImage\",\n        src: logo,\n        alt: \"\",\n        width: \"50px\",\n        height: \"50px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //if the user exists, show a Logout button\n      _jsxDEV(\"button\", {\n        onClick: () => auth.signOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this) :\n      /*#__PURE__*/\n      //else, show a sign up button\n      _jsxDEV(\"div\", {\n        className: \"app__loginContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpenSignIn(true),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOpen(true),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__posts\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_postsRight\",\n        children:\n        /*loop through posts in state*/\n        posts.map(({\n          id,\n          post\n        }) =>\n        /*#__PURE__*/\n        //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n        _jsxDEV(Post, {\n          uid: post.uid,\n          postId: id,\n          user: user,\n          username: post.username,\n          caption: post.caption,\n          imageUrl: post.imageUrl,\n          keyword: post.keyword\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n    /*#__PURE__*/\n    //access only when user is signed in\n    _jsxDEV(\"div\", {\n      className: \"app__bottom\",\n      children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n        children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Home\",\n          icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 46\n          }, this),\n          component: Link,\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"AddBox\",\n          icon: /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 48\n          }, this),\n          component: Link,\n          onClick: () => setOpenP(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Notifications\",\n          icon: /*#__PURE__*/_jsxDEV(NotificationsNoneOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n          label: \"Account\",\n          icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 49\n          }, this),\n          component: Link,\n          to: \"/UserProfile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this) //hide nav bar when user is not signed in\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"BetTQslEw5p42Myp+JieLOhIlro=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/UserProfile.js"],"names":["React","useState","useEffect","logo","Post","db","auth","makeStyles","Modal","Input","AccountCircleOutlinedIcon","EmailOutlinedIcon","LockOutlinedIcon","BottomNavigation","HomeOutlinedIcon","AddBoxOutlinedIcon","NotificationsNoneOutlinedIcon","BottomNavigationAction","Link","withRouter","firebase","storage","InputLabel","MenuItem","FormControl","Select","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","UserProfile","classes","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","username","setUsername","password","setPassword","email","setEmail","user","setUser","openP","setOpenP","caption","setCaption","image","setImage","progress","setProgress","comments","setComments","comment","setComment","unsubscribe","postId","collection","where","uid","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","keyword","setKeyword","openDropDown","setOpenDropDown","handleChangeDropDown","target","value","handleCloseDropDown","handleOpenDropDown","handleChange","e","files","handleUpload","userr","currentUser","uploadTask","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","imageUrl","onAuthStateChanged","authUser","updateProfile","id","post","signUp","firebaseUser","sendEmailVerification","createUserWithEmailAndPassword","catch","signIn","signInWithEmailAndPassword","formControl","signOut"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport logo from './beej.png';\nimport Post from './Post';\n//import RecoverAccount from './RecoverAccount';\nimport {db, auth} from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n//import {Button} from '@material-ui/core';\nimport {Input} from '@material-ui/core';\n//import ImageUpload from './ImageUpload';\n//import VerifyEmail from './VerifyEmail';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport {Link, withRouter} from 'react-router-dom';\n\nimport firebase from \"firebase\";\nimport {storage} from './firebase';\nimport './ImageUpload.css';\n\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n//import Button from '@material-ui/core/Button';\n\n\n\n\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\nfunction UserProfile() {\n/*states...how you set variables in react*/\nconst classes = useStyles();\n// getModalStyle is not a pure function, we roll the style only on the first render\nconst [modalStyle] = useState(getModalStyle);\n\nconst [posts, setPosts] = useState([]);\nconst [open,setOpen] = useState(false);\nconst [openSignIn, setOpenSignIn] = useState(false);\nconst [username,setUsername] = useState('');\nconst [password,setPassword] = useState('');\nconst [email,setEmail] = useState('');\nconst [user,setUser] = useState(null); //state to keep track of the user\n\n\n//IMAGE UPLOAD STATES\nconst [openP,setOpenP] = useState(false);\nconst [caption, setCaption] = useState('');\nconst [image, setImage] = useState(null); //state for the progress bar\nconst [progress, setProgress] = useState(0);\nconst [comments, setComments] = useState([]); //keep track of the comments\n  const [comment, setComment] = useState('');\n  useEffect(()=>{\n    let unsubscribe;\n    if (postId) //if a post id was passed true\n    {\n      unsubscribe = db\n      .collection(\"posts\") //access the post collection\n      .where('uid', '==', uid)\n      .doc(postId)\n      .collection(\"comments\")\n      .orderBy('timestamp', 'desc')\n      .onSnapshot((snapshot) => { // get a snapshot listener for that comment\n\t\tsetComments(snapshot.docs.map((doc) => doc.data())); \n      });\n  }\n   return () => {\n    unsubscribe();\n  };\n  },\n  [postId]);\n\n  //function that submits comment into database for a specific post\n  const postComment = (event) => {\n    event.preventDefault();\n\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,  //get the user who signed in from app.js\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment(''); //clears the box\n  }\n\nconst [keyword, setKeyword] = React.useState('');\n  const [openDropDown, setOpenDropDown] = React.useState(false);\n\n  const handleChangeDropDown = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const handleCloseDropDown = () => {\n    setOpenDropDown(false);\n  };\n\n  const handleOpenDropDown = () => {\n    setOpenDropDown(true);\n  };\n\n\n//imageupload functions\nconst handleChange =  (e) => {//handleChange function fires off an event\n  if (e.target.files[0]) { //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n  }\n};\n\nconst handleUpload = (event) => {\n  event.preventDefault(); //avoid refresh when upload button is clicked\n\n\n\n  let userr = firebase.auth().currentUser\n  //const id = uuid.v4()\n\n\n\n\n\n  //access the storage in firebase, get a references to the folder images/ and store image there\n\n   const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    \n\n\n    uploadTask.on(\n      \"state_changed\",\n      /*provide snapshot of the image uploading progress via an equation*/\n      (snapshot) => {\n          //progress function ...\n          const progress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n      },\n      (error) => {\n          //error function ..\n          console.log(error);\n          alert(error.message);\n      },\n      () => {\n          // complete function ...\n          storage\n              .ref(\"images\")\n              .child(image.name)\n              .getDownloadURL()   //GET DOWNLOAD LINK TO THE IMAGE\n              .then(url => {\n                  //post image inside db\n                  db.collection(\"posts\").add({\n                      //get server timestamp so images are sorted by time posted\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                      caption: caption,\n                      imageUrl: url,\n                      username: user.displayName,\n                      keyword: keyword,\n                      uid: userr.uid,\n                      //id: id\n                  });\n\n                  setProgress(0); //reset progress\n                  setCaption(\"\");\n                  setImage(null);\n                  setKeyword(\"\");\n              });\n      }\n  );\n\n \n//  setOpenP(false); //close modal after upload\n  \n\n  \n\n\n};\n\n\n\n\n\n\nuseEffect(() => {\n  \n    const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);  //check the console if someone is there or not\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {\n          //dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set their display name in firebase\n        });\n        }\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe ();\n    }\n}, [user, username]);\n\n//useEffect runs a piece of code based on a specific condition\nuseEffect(() => {\n  //this is where the code runs\n  //snapshot is a powerful listener that will run the code when a post is made\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //everytime a new post is added, this code fires...\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id, //the post ids\n      post: doc.data()\n    })));\n  })\n}, []);//[] symbol means run the code once\n\n//sign up function. Fired up by the button\nconst signUp = (event) => {\n  event.preventDefault(); //avoid refresh when sign up button is clicked\n\n  //verify email\n  auth.onAuthStateChanged(function (firebaseUser) {\n    if (firebaseUser) {\n      firebaseUser.sendEmailVerification().then(function() {\n        // Email sent.\n        //alert(\"Your email verification code has been sent\")\n      }, function(error) {\n        // An error happened.\n       alert(error.message)\n      })\n\n    } else {\n      \n    }\n});\n\n\nauth\n    .createUserWithEmailAndPassword(email, password)  //create user\n    .then((authUser) => {\n    return authUser.user.updateProfile({\n    displayName: username\n    })  \n  }\n\n  )\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n\n  setOpen(false); //close modal after signing up\n\n  \n}\n\n\n//sign in function. Fired up by the button\nconst signIn = (event) => {\n  event.preventDefault(); //avoid refresh when sign in button is clicked\n\n  \n  auth\n  .signInWithEmailAndPassword(email, password)\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n  \n  setOpenSignIn(false); //close modal after signing in\n}\n\n\n\n  return (\n    <div className=\"app\">\n      {/*using BEM naming convetion*/}\n\n{/* \n      {user?.displayName ?(//access only when user is signed in\n        <ImageUpload username={user.displayName} />\n      ):\n      (\n          <h7>Sorry you need to login to upload</h7>\n      )} \n */}\n\n\n\n      <Modal //Sign up Modal\n        open = {open} //state to keep track if its open\n        onClose={() => setOpen(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <AccountCircleOutlinedIcon/>\n            <Input \n                placeholder = \"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <button type=\"submit\" onClick={signUp}>Sign Up</button>\n              \n          </form>\n        </div>\n      </Modal>\n  \n\n      <Modal //Sign Out and Login Modal\n        open = {openSignIn} //state to keep track if its open\n        onClose={() => setOpenSignIn(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              \n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              \n              <button type=\"submit\" onClick={signIn}>Sign In</button>\n              \n          </form>\n        </div>\n      </Modal>\n\n\n{/* modal for posting*/}\n<Modal \n        open = {openP} //state to keep track if its open\n        onClose={() => setOpenP(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n        <div className=\"imageupload\">\n         \n         \n         \n        <center>\n            <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            <FormControl className={classes.formControl}>\n            \n\n        <InputLabel id=\"demo-controlled-open-select-label\">Choose a keyword</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={openDropDown}\n          onClose={handleCloseDropDown}\n          onOpen={handleOpenDropDown}\n          value={keyword}\n          onChange={handleChangeDropDown}\n        >\n          <MenuItem value=\"\">\n            <em>--Choose a keyword--</em>\n          </MenuItem>\n          <MenuItem value={\"Pothole\"}>Pothole</MenuItem>\n          <MenuItem value={\"Water Spill\"}>Water Spill</MenuItem>\n          <MenuItem value={\"Sinkhole\"}>Sinkhole</MenuItem>\n        </Select>\n      </FormControl>\n \n\n           <input type=\"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\n           <input type=\"file\" onChange={handleChange} />\n\n<progress className=\"imageupload__progress\" value={progress} max=\"100\"/>\n           <button onClick={handleUpload}>\n            Upload\n           </button>\n          \n        </div>\n        </div>\n        \n      </Modal>\n\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"50px\"\n          height=\"50px\"\n        />\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <button onClick={() => auth.signOut()}>Logout</button>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n        </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n          <Post key={id} uid={post.uid} postId={id} user= {user} username={post.username} caption={post.caption} imageUrl={post.imageUrl} keyword={post.keyword} ></Post>\n        ))\n      }\n      </div>\n      </div>\n        \n\n\n\n{user?.displayName ?(//access only when user is signed in\n\n \n      <div className=\"app__bottom\">\n      <BottomNavigation>\n  <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/\" />\n  <BottomNavigationAction label=\"AddBox\" icon={<AddBoxOutlinedIcon />} component={Link} onClick={() => setOpenP(true)}/>\n  <BottomNavigationAction label=\"Notifications\" icon={<NotificationsNoneOutlinedIcon />} />\n  <BottomNavigationAction label=\"Account\" icon={<AccountCircleOutlinedIcon />} component={Link} to=\"/UserProfile\"/>\n\n</BottomNavigation>\n</div>\n     ):\n     (\n        <h7></h7> //hide nav bar when user is not signed in\n    )}\n     \n\n    </div>\n  );\n}\n\nexport default UserProfile;"]},"metadata":{},"sourceType":"module"}