{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/okienayonoadu/beej copy 2/src/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Home.css';\nimport Home from \"./Home\";\nimport './ImageUpload.css';\nimport logo from './beej.png';\nimport Post from './Post'; //import RecoverAccount from './RecoverAccount';\n\nimport { db, auth } from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal'; //import {Button} from '@material-ui/core';\n\nimport { Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload'; //import VerifyEmail from './VerifyEmail';\n\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport firebase from \"firebase\";\nimport { storage } from './firebase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Link } from 'react-router-dom';\n/*Styling for modal. Code from material-ui.com*/\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function UserProfile() {\n  _s();\n\n  const classes = useStyles(); // getModalStyle is not a pure function, we roll the style only on the first render\n\n  const [modalStyle] = useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [openE, setOpenE] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); //state to keep track of the user\n  //IMAGE UPLOAD STATES\n\n  const [openP, setOpenP] = useState(false);\n  const [caption, setCaption] = useState('');\n  const [keyword, setKeyword] = React.useState('');\n  const [image, setImage] = useState(null); //state for the progress bar\n\n  const [progress, setProgress] = useState(0);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setKeyword(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  }; //imageupload functions\n\n\n  const handleChangeE = e => {\n    //handleChange function fires off an event\n    if (e.target.files[0]) {\n      //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n    }\n  };\n\n  const handleUpload = event => {\n    event.preventDefault(); //avoid refresh when upload button is clicked\n    //access the storage in firebase, get a references to the folder images/ and store image there\n\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\"state_changed\",\n    /*provide snapshot of the image uploading progress via an equation*/\n    snapshot => {\n      //progress function ...\n      const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n      setProgress(progress);\n    }, error => {\n      //error function ..\n      console.log(error);\n      alert(error.message);\n    }, () => {\n      // complete function ...\n      storage.ref(\"images\").child(image.name).getDownloadURL() //GET DOWNLOAD LINK TO THE IMAGE\n      .then(url => {\n        //post image inside db\n        db.collection(\"posts\").add({\n          //get server timestamp so images are sorted by time posted\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          caption: caption,\n          imageUrl: url,\n          keyword: keyword,\n          username: user.displayName\n        });\n        setProgress(0); //reset progress\n\n        setKeyword(\"\");\n        setCaption(\"\");\n        setImage(null);\n      });\n    });\n    setOpenP(false); //close modal after upload\n  };\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser); //check the console if someone is there or not\n\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {//dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username //set their display name in firebase\n\n          });\n        }\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    });\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe();\n    };\n  }, [user, username]); //useEffect runs a piece of code based on a specific condition\n\n  useEffect(() => {\n    //this is where the code runs\n    //snapshot is a powerful listener that will run the code when a post is made\n    db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      //everytime a new post is added, this code fires...\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        //the post ids\n        post: doc.data()\n      })));\n    });\n  }, []); //[] symbol means run the code once\n  //sign up function. Fired up by the button\n\n  const signUp = event => {\n    event.preventDefault(); //avoid refresh when sign up button is clicked\n    //verify email\n\n    auth.onAuthStateChanged(function (firebaseUser) {\n      if (firebaseUser) {\n        firebaseUser.sendEmailVerification().then(function () {// Email sent.\n          //alert(\"Your email verification code has been sent\")\n        }, function (error) {\n          // An error happened.\n          alert(error.message);\n        });\n      } else {}\n    });\n    auth.createUserWithEmailAndPassword(email, password) //create user\n    .then(authUser => {\n      return authUser.user.updateProfile({\n        displayName: username\n      });\n    }) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpenE(false); //close modal after signing up\n  }; //sign in function. Fired up by the button\n\n\n  const signIn = event => {\n    event.preventDefault(); //avoid refresh when sign in button is clicked\n\n    auth.signInWithEmailAndPassword(email, password) //backend validation is done by firebase\n    .catch(error => alert(error.message)); //alert of any errors with a message\n\n    setOpenSignIn(false); //close modal after signing in\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Modal //Sign up Modal\n      , {\n        openE: openE //state to keep track if its open\n        ,\n        onClose: () => setOpenE(false) //onClose method. closes the model when anywhere else on the screen is clicked\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"app__signup\",\n            children: [/*#__PURE__*/_jsxDEV(\"center\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"app__headerImage\",\n                src: logo,\n                alt: \"\",\n                width: \"50px\",\n                height: \"50px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"username\",\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"email\",\n              type: \"text\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: signUp,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal //Sign Out and Login Modal\n      , {\n        openE: openSignIn //state to keep track if its open\n        ,\n        onClose: () => setOpenSignIn(false) //onClose method. closes the model when anywhere else on the screen is clicked\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"app__signup\",\n            children: [/*#__PURE__*/_jsxDEV(\"center\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"app__headerImage\",\n                src: logo,\n                alt: \"\",\n                width: \"50px\",\n                height: \"50px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(EmailOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"email\",\n              type: \"text\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"password\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: signIn,\n              children: \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: openP //state to keep track if its open\n        ,\n        onClose: () => setOpenP(false) //onClose method. closes the model when anywhere else on the screen is clicked\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: modalStyle,\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imageupload\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"app__signup\",\n              children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n                className: \"imageupload__progress\",\n                value: progress,\n                max: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter a caption...\",\n                onChange: event => setCaption(event.target.value),\n                value: caption\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-controlled-open-select-label\",\n                  children: \"Choose Keyword\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-controlled-open-select-label\",\n                  id: \"demo-controlled-open-select\",\n                  open: open,\n                  onClose: handleClose,\n                  onOpen: handleOpen,\n                  value: keyword,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Pothole\",\n                    children: \"Pothole\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Water Spill\",\n                    children: \"Water Spill\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Sinkhole\",\n                    children: \"Sinkhole\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: handleChangeE\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: handleUpload,\n                children: \"Upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"app__headerImage\",\n          src: logo,\n          alt: \"\",\n          width: \"50px\",\n          height: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n        /*#__PURE__*/\n        //if the user exists, show a Logout button\n        _jsxDEV(\"button\", {\n          onClick: () => auth.signOut(),\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 9\n        }, this) :\n        /*#__PURE__*/\n        //else, show a sign up button\n        _jsxDEV(\"div\", {\n          className: \"app__loginContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpenSignIn(true),\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpen(true),\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__posts\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_postsRight\",\n          children:\n          /*loop through posts in state*/\n          posts.map(({\n            id,\n            post\n          }) =>\n          /*#__PURE__*/\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n          _jsxDEV(Post, {\n            postId: id,\n            user: user,\n            username: post.username,\n            caption: post.caption,\n            keyword: post.keyword,\n            imageUrl: post.imageUrl\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 7\n      }, this), (user === null || user === void 0 ? void 0 : user.displayName) ?\n      /*#__PURE__*/\n      //access only when user is signed in\n      _jsxDEV(\"div\", {\n        className: \"app__bottom\",\n        children: /*#__PURE__*/_jsxDEV(BottomNavigation, {\n          children: [/*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n            label: \"Home\",\n            icon: /*#__PURE__*/_jsxDEV(HomeOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 48\n            }, this),\n            component: Link,\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n            label: \"AddBox\",\n            icon: /*#__PURE__*/_jsxDEV(AddBoxOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 50\n            }, this),\n            onClick: () => setOpenP(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n            label: \"Notifications\",\n            icon: /*#__PURE__*/_jsxDEV(NotificationsNoneOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(BottomNavigationAction, {\n            label: \"Account\",\n            icon: /*#__PURE__*/_jsxDEV(AccountCircleOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 3\n      }, this) : /*#__PURE__*/_jsxDEV(\"h7\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this) //hide nav bar when user is not signed in\n      ]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserProfile, \"qhM1EmKViNBWWoaE9REsshL846w=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/Users/okienayonoadu/beej copy 2/src/UserProfile.js"],"names":["React","useState","useEffect","Home","logo","Post","db","auth","makeStyles","Modal","Input","ImageUpload","AccountCircleOutlinedIcon","EmailOutlinedIcon","LockOutlinedIcon","BottomNavigation","HomeOutlinedIcon","AddBoxOutlinedIcon","NotificationsNoneOutlinedIcon","BottomNavigationAction","firebase","storage","InputLabel","MenuItem","FormControl","Select","Link","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","button","display","marginTop","formControl","margin","minWidth","UserProfile","classes","modalStyle","posts","setPosts","openE","setOpenE","openSignIn","setOpenSignIn","username","setUsername","password","setPassword","email","setEmail","user","setUser","openP","setOpenP","caption","setCaption","keyword","setKeyword","image","setImage","progress","setProgress","open","setOpen","handleChange","event","target","value","handleClose","handleOpen","handleChangeE","e","files","handleUpload","preventDefault","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","firestore","FieldValue","serverTimestamp","imageUrl","displayName","unsubscribe","onAuthStateChanged","authUser","updateProfile","orderBy","onSnapshot","docs","map","doc","id","post","data","signUp","firebaseUser","sendEmailVerification","createUserWithEmailAndPassword","catch","signIn","signInWithEmailAndPassword","signOut"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './Home.css';\nimport Home from \"./Home\"\nimport './ImageUpload.css';\nimport logo from './beej.png';\nimport Post from './Post';\n//import RecoverAccount from './RecoverAccount';\nimport {db, auth} from './firebase';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\n//import {Button} from '@material-ui/core';\nimport {Input} from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\n//import VerifyEmail from './VerifyEmail';\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\nimport EmailOutlinedIcon from '@material-ui/icons/EmailOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\nimport NotificationsNoneOutlinedIcon from '@material-ui/icons/NotificationsNoneOutlined';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport firebase from \"firebase\";\nimport {storage} from './firebase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {Link} from 'react-router-dom';\n/*Styling for modal. Code from material-ui.com*/\nfunction getModalStyle() {\n    const top = 50\n    const left = 50\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: 'absolute',\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    button: {\n      display: 'block',\n      marginTop: theme.spacing(2),\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }));\n\nexport default function UserProfile()\n{\n    const classes = useStyles();\n// getModalStyle is not a pure function, we roll the style only on the first render\nconst [modalStyle] = useState(getModalStyle);\n\nconst [posts, setPosts] = useState([]);\nconst [openE,setOpenE] = useState(false);\nconst [openSignIn, setOpenSignIn] = useState(false);\nconst [username,setUsername] = useState('');\nconst [password,setPassword] = useState('');\nconst [email,setEmail] = useState('');\nconst [user,setUser] = useState(null); //state to keep track of the user\n\n\n//IMAGE UPLOAD STATES\nconst [openP,setOpenP] = useState(false);\nconst [caption, setCaption] = useState('');\nconst [keyword, setKeyword] = React.useState('');\nconst [image, setImage] = useState(null); //state for the progress bar\nconst [progress, setProgress] = useState(0);\nconst [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setKeyword(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  //imageupload functions\nconst handleChangeE =  (e) => {//handleChange function fires off an event\n  if (e.target.files[0]) { //get the first file you selected\n      setImage(e.target.files[0]); //set the image in state to that file\n  }\n};\n\nconst handleUpload = (event) => {\n  event.preventDefault(); //avoid refresh when upload button is clicked\n\n  //access the storage in firebase, get a references to the folder images/ and store image there\n  const uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n  uploadTask.on(\n      \"state_changed\",\n      /*provide snapshot of the image uploading progress via an equation*/\n      (snapshot) => {\n          //progress function ...\n          const progress = Math.round(\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          setProgress(progress);\n      },\n      (error) => {\n          //error function ..\n          console.log(error);\n          alert(error.message);\n      },\n      () => {\n          // complete function ...\n          storage\n              .ref(\"images\")\n              .child(image.name)\n              .getDownloadURL()   //GET DOWNLOAD LINK TO THE IMAGE\n              .then(url => {\n                  //post image inside db\n                  db.collection(\"posts\").add({\n                      //get server timestamp so images are sorted by time posted\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                      caption: caption,\n                      imageUrl: url,\n                      keyword: keyword,\n                      username: user.displayName\n                  });\n\n                  setProgress(0); //reset progress\n                  setKeyword(\"\");\n                  setCaption(\"\");\n                  setImage(null);\n              });\n      }\n  );\n  setOpenP(false); //close modal after upload\n};\n\n\n\n\n\n\nuseEffect(() => {\n  \n    const unsubscribe = auth.onAuthStateChanged((authUser) => { //listen anytime an authentication change happens\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);  //check the console if someone is there or not\n        setUser(authUser); //Cookie tracking to keep you logged in. Captures the user in our state. \n\n        if (authUser.displayName) {\n          //dont update username if they dont have a display name\n        } else {\n          // if we just created someone...\n          return authUser.updateProfile({\n            displayName: username, //set their display name in firebase\n        });\n        }\n\n      } else {\n        // user has logged out...\n        setUser(null);\n      }\n    })\n\n    return () => {\n      //perform some cleanup actions before restarting the useEffect. This to avoid duplicate listeners.\n      unsubscribe ();\n    }\n}, [user, username]);\n\n//useEffect runs a piece of code based on a specific condition\nuseEffect(() => {\n  //this is where the code runs\n  //snapshot is a powerful listener that will run the code when a post is made\n  db.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n    //everytime a new post is added, this code fires...\n    setPosts(snapshot.docs.map(doc => ({\n      id: doc.id, //the post ids\n      post: doc.data()\n    })));\n  })\n}, []);//[] symbol means run the code once\n\n//sign up function. Fired up by the button\nconst signUp = (event) => {\n  event.preventDefault(); //avoid refresh when sign up button is clicked\n\n  //verify email\n  auth.onAuthStateChanged(function (firebaseUser) {\n    if (firebaseUser) {\n      firebaseUser.sendEmailVerification().then(function() {\n        // Email sent.\n        //alert(\"Your email verification code has been sent\")\n      }, function(error) {\n        // An error happened.\n       alert(error.message)\n      })\n\n    } else {\n      \n    }\n});\n\n\nauth\n    .createUserWithEmailAndPassword(email, password)  //create user\n    .then((authUser) => {\n    return authUser.user.updateProfile({\n    displayName: username\n    })  \n  }\n\n  )\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n\n  setOpenE(false); //close modal after signing up\n\n  \n}\n\n\n//sign in function. Fired up by the button\nconst signIn = (event) => {\n  event.preventDefault(); //avoid refresh when sign in button is clicked\n\n  \n  auth\n  .signInWithEmailAndPassword(email, password)\n  //backend validation is done by firebase\n  .catch((error) => alert(error.message)) //alert of any errors with a message\n  \n  setOpenSignIn(false); //close modal after signing in\n}\n  return (\n    <div>\n          <div className=\"app\">\n  {/*using BEM naming convetion*/}\n      <Modal //Sign up Modal\n        openE = {openE} //state to keep track if its open\n        onClose={() => setOpenE(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <AccountCircleOutlinedIcon/>\n            <Input \n                placeholder = \"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <button type=\"submit\" onClick={signUp}>Sign Up</button>\n              \n          </form>\n        </div>\n      </Modal>\n  \n\n      <Modal //Sign Out and Login Modal\n        openE = {openSignIn} //state to keep track if its open\n        onClose={() => setOpenSignIn(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <form className= \"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src={logo}\n                alt=\"\"\n                width=\"50px\"\n                height=\"50px\"\n              />\n            </center>\n            \n            <EmailOutlinedIcon/>\n              <Input \n                placeholder = \"email\"\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              \n              <LockOutlinedIcon/>\n              <Input \n                placeholder = \"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              \n              <button type=\"submit\" onClick={signIn}>Sign In</button>\n              \n          </form>\n        </div>\n      </Modal>\n      <div>\n      \n      \n    </div>\n\n{/* modal for posting*/}\n<Modal open = {openP} //state to keep track if its open\n       onClose={() => setOpenP(false)} //onClose method. closes the model when anywhere else on the screen is clicked\n>\n        <div style={modalStyle} className={classes.paper}>\n        <div className=\"imageupload\">\n        <form className= \"app__signup\">\n        \n        <progress className=\"imageupload__progress\" value={progress} max=\"100\"/>\n        <input type=\"text\" placeholder='Enter a caption...' onChange={event => setCaption(event.target.value)} value={caption}/>\n        <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-controlled-open-select-label\">Choose Keyword</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          value={keyword}\n          onChange={handleChange}\n        >\n        <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          <MenuItem value={\"Pothole\"}>Pothole</MenuItem>\n          <MenuItem value={\"Water Spill\"}>Water Spill</MenuItem>\n          <MenuItem value={\"Sinkhole\"}>Sinkhole</MenuItem>\n        </Select>\n      </FormControl>\n            <input type=\"file\" onChange={handleChangeE} />\n            <button type=\"submit\" onClick={handleUpload}>\n              Upload\n            </button>\n           </form>\n        </div>\n        </div>\n        \n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src={logo}\n          alt=\"\"\n          width=\"50px\"\n          height=\"50px\"\n        />\n        {user?.displayName? ( //if the user exists, show a Logout button\n        <button onClick={() => auth.signOut()}>Logout</button>\n      ):  ( //else, show a sign up button\n          <div className=\"app__loginContainer\">\n        <button onClick={() => setOpenSignIn(true)}>Sign In</button>\n        <button onClick={() => setOpen(true)}>Sign Up</button>\n        </div>\n      )}\n      </div>\n\n      \n      <div className=\"app__posts\">\n        <div className= \"app_postsRight\">\n      {/*Posts*/}\n      {\n        /*loop through posts in state*/\n        posts.map(({id, post}) => (\n          //the key allows the page to only refresh the new post, not all the posts. since each post has its own key\n          <Post key={id} postId={id} user= {user} username={post.username} caption={post.caption} keyword={post.keyword} imageUrl={post.imageUrl}></Post>\n        ))\n      }\n      </div>\n      </div>\n        \n       \n\n   \n\n\n\n{user?.displayName ?(//access only when user is signed in\n\n \n  <div className=\"app__bottom\">\n  <BottomNavigation>\n    <BottomNavigationAction label=\"Home\" icon={<HomeOutlinedIcon />} component={Link} to=\"/\" />\n    <BottomNavigationAction label=\"AddBox\" icon={<AddBoxOutlinedIcon />}onClick={() => setOpenP(true)}/>\n    <BottomNavigationAction label=\"Notifications\" icon={<NotificationsNoneOutlinedIcon />}/>\n    <BottomNavigationAction label=\"Account\" icon={<AccountCircleOutlinedIcon />} />\n  </BottomNavigation>\n  </div>\n     ):\n     (\n        <h7></h7> //hide nav bar when user is not signed in\n    )}\n     \n\n    </div>\n     \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}